'------------------------------------------------------------------------------
' <auto-generated>
'     이 코드는 도구를 사용하여 생성되었습니다.
'     런타임 버전:4.0.30319.42000
'
'     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
'     이러한 변경 내용이 손실됩니다.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("GRMProject"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class GRMProject
    Inherits Global.System.Data.DataSet
    
    Private tableProjectSettings As ProjectSettingsDataTable
    
    Private tableSubWatershedSettings As SubWatershedSettingsDataTable
    
    Private tableRTenv As RTenvDataTable
    
    Private tableWatchPoints As WatchPointsDataTable
    
    Private tableGreenAmptParameter As GreenAmptParameterDataTable
    
    Private tableSoilDepth As SoilDepthDataTable
    
    Private tableLandCover As LandCoverDataTable
    
    Private tableFlowControlGrid As FlowControlGridDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ProjectSettings")) Is Nothing) Then
                MyBase.Tables.Add(New ProjectSettingsDataTable(ds.Tables("ProjectSettings")))
            End If
            If (Not (ds.Tables("SubWatershedSettings")) Is Nothing) Then
                MyBase.Tables.Add(New SubWatershedSettingsDataTable(ds.Tables("SubWatershedSettings")))
            End If
            If (Not (ds.Tables("RTenv")) Is Nothing) Then
                MyBase.Tables.Add(New RTenvDataTable(ds.Tables("RTenv")))
            End If
            If (Not (ds.Tables("WatchPoints")) Is Nothing) Then
                MyBase.Tables.Add(New WatchPointsDataTable(ds.Tables("WatchPoints")))
            End If
            If (Not (ds.Tables("GreenAmptParameter")) Is Nothing) Then
                MyBase.Tables.Add(New GreenAmptParameterDataTable(ds.Tables("GreenAmptParameter")))
            End If
            If (Not (ds.Tables("SoilDepth")) Is Nothing) Then
                MyBase.Tables.Add(New SoilDepthDataTable(ds.Tables("SoilDepth")))
            End If
            If (Not (ds.Tables("LandCover")) Is Nothing) Then
                MyBase.Tables.Add(New LandCoverDataTable(ds.Tables("LandCover")))
            End If
            If (Not (ds.Tables("FlowControlGrid")) Is Nothing) Then
                MyBase.Tables.Add(New FlowControlGridDataTable(ds.Tables("FlowControlGrid")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ProjectSettings() As ProjectSettingsDataTable
        Get
            Return Me.tableProjectSettings
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SubWatershedSettings() As SubWatershedSettingsDataTable
        Get
            Return Me.tableSubWatershedSettings
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RTenv() As RTenvDataTable
        Get
            Return Me.tableRTenv
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WatchPoints() As WatchPointsDataTable
        Get
            Return Me.tableWatchPoints
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GreenAmptParameter() As GreenAmptParameterDataTable
        Get
            Return Me.tableGreenAmptParameter
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SoilDepth() As SoilDepthDataTable
        Get
            Return Me.tableSoilDepth
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LandCover() As LandCoverDataTable
        Get
            Return Me.tableLandCover
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FlowControlGrid() As FlowControlGridDataTable
        Get
            Return Me.tableFlowControlGrid
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As GRMProject = CType(MyBase.Clone,GRMProject)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ProjectSettings")) Is Nothing) Then
                MyBase.Tables.Add(New ProjectSettingsDataTable(ds.Tables("ProjectSettings")))
            End If
            If (Not (ds.Tables("SubWatershedSettings")) Is Nothing) Then
                MyBase.Tables.Add(New SubWatershedSettingsDataTable(ds.Tables("SubWatershedSettings")))
            End If
            If (Not (ds.Tables("RTenv")) Is Nothing) Then
                MyBase.Tables.Add(New RTenvDataTable(ds.Tables("RTenv")))
            End If
            If (Not (ds.Tables("WatchPoints")) Is Nothing) Then
                MyBase.Tables.Add(New WatchPointsDataTable(ds.Tables("WatchPoints")))
            End If
            If (Not (ds.Tables("GreenAmptParameter")) Is Nothing) Then
                MyBase.Tables.Add(New GreenAmptParameterDataTable(ds.Tables("GreenAmptParameter")))
            End If
            If (Not (ds.Tables("SoilDepth")) Is Nothing) Then
                MyBase.Tables.Add(New SoilDepthDataTable(ds.Tables("SoilDepth")))
            End If
            If (Not (ds.Tables("LandCover")) Is Nothing) Then
                MyBase.Tables.Add(New LandCoverDataTable(ds.Tables("LandCover")))
            End If
            If (Not (ds.Tables("FlowControlGrid")) Is Nothing) Then
                MyBase.Tables.Add(New FlowControlGridDataTable(ds.Tables("FlowControlGrid")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableProjectSettings = CType(MyBase.Tables("ProjectSettings"),ProjectSettingsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableProjectSettings) Is Nothing) Then
                Me.tableProjectSettings.InitVars
            End If
        End If
        Me.tableSubWatershedSettings = CType(MyBase.Tables("SubWatershedSettings"),SubWatershedSettingsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSubWatershedSettings) Is Nothing) Then
                Me.tableSubWatershedSettings.InitVars
            End If
        End If
        Me.tableRTenv = CType(MyBase.Tables("RTenv"),RTenvDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRTenv) Is Nothing) Then
                Me.tableRTenv.InitVars
            End If
        End If
        Me.tableWatchPoints = CType(MyBase.Tables("WatchPoints"),WatchPointsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWatchPoints) Is Nothing) Then
                Me.tableWatchPoints.InitVars
            End If
        End If
        Me.tableGreenAmptParameter = CType(MyBase.Tables("GreenAmptParameter"),GreenAmptParameterDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGreenAmptParameter) Is Nothing) Then
                Me.tableGreenAmptParameter.InitVars
            End If
        End If
        Me.tableSoilDepth = CType(MyBase.Tables("SoilDepth"),SoilDepthDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSoilDepth) Is Nothing) Then
                Me.tableSoilDepth.InitVars
            End If
        End If
        Me.tableLandCover = CType(MyBase.Tables("LandCover"),LandCoverDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLandCover) Is Nothing) Then
                Me.tableLandCover.InitVars
            End If
        End If
        Me.tableFlowControlGrid = CType(MyBase.Tables("FlowControlGrid"),FlowControlGridDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFlowControlGrid) Is Nothing) Then
                Me.tableFlowControlGrid.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "GRMProject"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/GRMProject.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableProjectSettings = New ProjectSettingsDataTable()
        MyBase.Tables.Add(Me.tableProjectSettings)
        Me.tableSubWatershedSettings = New SubWatershedSettingsDataTable()
        MyBase.Tables.Add(Me.tableSubWatershedSettings)
        Me.tableRTenv = New RTenvDataTable()
        MyBase.Tables.Add(Me.tableRTenv)
        Me.tableWatchPoints = New WatchPointsDataTable()
        MyBase.Tables.Add(Me.tableWatchPoints)
        Me.tableGreenAmptParameter = New GreenAmptParameterDataTable()
        MyBase.Tables.Add(Me.tableGreenAmptParameter)
        Me.tableSoilDepth = New SoilDepthDataTable()
        MyBase.Tables.Add(Me.tableSoilDepth)
        Me.tableLandCover = New LandCoverDataTable()
        MyBase.Tables.Add(Me.tableLandCover)
        Me.tableFlowControlGrid = New FlowControlGridDataTable()
        MyBase.Tables.Add(Me.tableFlowControlGrid)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeProjectSettings() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSubWatershedSettings() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeRTenv() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeWatchPoints() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGreenAmptParameter() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSoilDepth() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeLandCover() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeFlowControlGrid() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As GRMProject = New GRMProject()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ProjectSettingsRowChangeEventHandler(ByVal sender As Object, ByVal e As ProjectSettingsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SubWatershedSettingsRowChangeEventHandler(ByVal sender As Object, ByVal e As SubWatershedSettingsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub RTenvRowChangeEventHandler(ByVal sender As Object, ByVal e As RTenvRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub WatchPointsRowChangeEventHandler(ByVal sender As Object, ByVal e As WatchPointsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GreenAmptParameterRowChangeEventHandler(ByVal sender As Object, ByVal e As GreenAmptParameterRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SoilDepthRowChangeEventHandler(ByVal sender As Object, ByVal e As SoilDepthRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub LandCoverRowChangeEventHandler(ByVal sender As Object, ByVal e As LandCoverRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub FlowControlGridRowChangeEventHandler(ByVal sender As Object, ByVal e As FlowControlGridRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ProjectSettingsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ProjectSettingsRow)
        
        Private columnProjectFile As Global.System.Data.DataColumn
        
        Private columnGRMSimulationType As Global.System.Data.DataColumn
        
        Private columnWatershedFile As Global.System.Data.DataColumn
        
        Private columnSlopeFile As Global.System.Data.DataColumn
        
        Private columnFlowDirectionFile As Global.System.Data.DataColumn
        
        Private columnFlowAccumFile As Global.System.Data.DataColumn
        
        Private columnStreamFile As Global.System.Data.DataColumn
        
        Private columnChannelWidthFile As Global.System.Data.DataColumn
        
        Private columnLandCoverDataType As Global.System.Data.DataColumn
        
        Private columnLandCoverFile As Global.System.Data.DataColumn
        
        Private columnLandCoverVATFile As Global.System.Data.DataColumn
        
        Private columnConstantRoughnessCoeff As Global.System.Data.DataColumn
        
        Private columnConstantImperviousRatio As Global.System.Data.DataColumn
        
        Private columnSoilTextureDataType As Global.System.Data.DataColumn
        
        Private columnSoilTextureFile As Global.System.Data.DataColumn
        
        Private columnSoilTextureVATFile As Global.System.Data.DataColumn
        
        Private columnConstantSoilPorosity As Global.System.Data.DataColumn
        
        Private columnConstantSoilEffPorosity As Global.System.Data.DataColumn
        
        Private columnConstantSoilWettingFrontSuctionHead As Global.System.Data.DataColumn
        
        Private columnConstantSoilHydraulicConductivity As Global.System.Data.DataColumn
        
        Private columnSoilDepthDataType As Global.System.Data.DataColumn
        
        Private columnSoilDepthFile As Global.System.Data.DataColumn
        
        Private columnSoilDepthVATFile As Global.System.Data.DataColumn
        
        Private columnConstantSoilDepth As Global.System.Data.DataColumn
        
        Private columnInitialSoilSaturationRatioFile As Global.System.Data.DataColumn
        
        Private columnInitialChannelFlowFile As Global.System.Data.DataColumn
        
        Private columnRainfallDataType As Global.System.Data.DataColumn
        
        Private columnRainfallInterval As Global.System.Data.DataColumn
        
        Private columnRainfallDataFile As Global.System.Data.DataColumn
        
        Private columnFlowDirectionType As Global.System.Data.DataColumn
        
        Private columnGridCellSize As Global.System.Data.DataColumn
        
        Private columnIsParallel As Global.System.Data.DataColumn
        
        Private columnMaxDegreeOfParallelism As Global.System.Data.DataColumn
        
        Private columnSimulStartingTime As Global.System.Data.DataColumn
        
        Private columnSimulationDuration As Global.System.Data.DataColumn
        
        Private columnComputationalTimeStep As Global.System.Data.DataColumn
        
        Private columnIsFixedTimeStep As Global.System.Data.DataColumn
        
        Private columnOutputTimeStep As Global.System.Data.DataColumn
        
        Private columnCrossSectionType As Global.System.Data.DataColumn
        
        Private columnSingleCSChannelWidthType As Global.System.Data.DataColumn
        
        Private columnChannelWidthEQc As Global.System.Data.DataColumn
        
        Private columnChannelWidthEQd As Global.System.Data.DataColumn
        
        Private columnChannelWidthEQe As Global.System.Data.DataColumn
        
        Private columnChannelWidthMostDownStream As Global.System.Data.DataColumn
        
        Private columnLowerRegionHeight As Global.System.Data.DataColumn
        
        Private columnLowerRegionBaseWidth As Global.System.Data.DataColumn
        
        Private columnUpperRegionBaseWidth As Global.System.Data.DataColumn
        
        Private columnCompoundCSChannelWidthLimit As Global.System.Data.DataColumn
        
        Private columnBankSideSlopeRight As Global.System.Data.DataColumn
        
        Private columnBankSideSlopeLeft As Global.System.Data.DataColumn
        
        Private columnSimulateInfiltration As Global.System.Data.DataColumn
        
        Private columnSimulateSubsurfaceFlow As Global.System.Data.DataColumn
        
        Private columnSimulateBaseFlow As Global.System.Data.DataColumn
        
        Private columnSimulateFlowControl As Global.System.Data.DataColumn
        
        Private columnMakeIMGFile As Global.System.Data.DataColumn
        
        Private columnMakeASCFile As Global.System.Data.DataColumn
        
        Private columnMakeSoilSaturationDistFile As Global.System.Data.DataColumn
        
        Private columnMakeRfDistFile As Global.System.Data.DataColumn
        
        Private columnMakeRFaccDistFile As Global.System.Data.DataColumn
        
        Private columnMakeFlowDistFile As Global.System.Data.DataColumn
        
        Private columnPrintOption As Global.System.Data.DataColumn
        
        Private columnWriteLog As Global.System.Data.DataColumn
        
        Private columnAboutThisProject As Global.System.Data.DataColumn
        
        Private columnAboutWatershed As Global.System.Data.DataColumn
        
        Private columnAboutLandCoverMap As Global.System.Data.DataColumn
        
        Private columnAboutSoilMap As Global.System.Data.DataColumn
        
        Private columnAboutSoilDepthMap As Global.System.Data.DataColumn
        
        Private columnAboutRainfall As Global.System.Data.DataColumn
        
        Private columnProjectSavedTime As Global.System.Data.DataColumn
        
        Private columnComputerName As Global.System.Data.DataColumn
        
        Private columnComputerUserName As Global.System.Data.DataColumn
        
        Private columnGRMVersion As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ProjectSettings"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMSimulationTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMSimulationType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WatershedFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWatershedFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SlopeFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FlowDirectionFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlowDirectionFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FlowAccumFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlowAccumFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StreamFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreamFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChannelWidthFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannelWidthFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LandCoverDataTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLandCoverDataType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LandCoverFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLandCoverFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LandCoverVATFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLandCoverVATFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantRoughnessCoeffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantRoughnessCoeff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantImperviousRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantImperviousRatio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilTextureDataTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilTextureDataType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilTextureFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilTextureFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilTextureVATFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilTextureVATFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantSoilPorosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantSoilPorosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantSoilEffPorosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantSoilEffPorosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantSoilWettingFrontSuctionHeadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantSoilWettingFrontSuctionHead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantSoilHydraulicConductivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantSoilHydraulicConductivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilDepthDataTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilDepthDataType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilDepthFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilDepthFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilDepthVATFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilDepthVATFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConstantSoilDepthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConstantSoilDepth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InitialSoilSaturationRatioFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInitialSoilSaturationRatioFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InitialChannelFlowFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInitialChannelFlowFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RainfallDataTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRainfallDataType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RainfallIntervalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRainfallInterval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RainfallDataFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRainfallDataFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FlowDirectionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlowDirectionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GridCellSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGridCellSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IsParallelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsParallel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxDegreeOfParallelismColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxDegreeOfParallelism
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SimulStartingTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimulStartingTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SimulationDurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimulationDuration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComputationalTimeStepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComputationalTimeStep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IsFixedTimeStepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsFixedTimeStep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OutputTimeStepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutputTimeStep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CrossSectionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCrossSectionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SingleCSChannelWidthTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSingleCSChannelWidthType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChannelWidthEQcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannelWidthEQc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChannelWidthEQdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannelWidthEQd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChannelWidthEQeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannelWidthEQe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChannelWidthMostDownStreamColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannelWidthMostDownStream
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LowerRegionHeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowerRegionHeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LowerRegionBaseWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLowerRegionBaseWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UpperRegionBaseWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpperRegionBaseWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompoundCSChannelWidthLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompoundCSChannelWidthLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BankSideSlopeRightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankSideSlopeRight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BankSideSlopeLeftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankSideSlopeLeft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SimulateInfiltrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimulateInfiltration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SimulateSubsurfaceFlowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimulateSubsurfaceFlow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SimulateBaseFlowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimulateBaseFlow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SimulateFlowControlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimulateFlowControl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MakeIMGFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMakeIMGFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MakeASCFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMakeASCFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MakeSoilSaturationDistFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMakeSoilSaturationDistFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MakeRfDistFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMakeRfDistFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MakeRFaccDistFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMakeRFaccDistFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MakeFlowDistFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMakeFlowDistFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PrintOptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintOption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WriteLogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWriteLog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AboutThisProjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboutThisProject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AboutWatershedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboutWatershed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AboutLandCoverMapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboutLandCoverMap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AboutSoilMapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboutSoilMap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AboutSoilDepthMapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboutSoilDepthMap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AboutRainfallColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAboutRainfall
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectSavedTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectSavedTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComputerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComputerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComputerUserNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComputerUserName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ProjectSettingsRow
            Get
                Return CType(Me.Rows(index),ProjectSettingsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectSettingsRowChanging As ProjectSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectSettingsRowChanged As ProjectSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectSettingsRowDeleting As ProjectSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectSettingsRowDeleted As ProjectSettingsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddProjectSettingsRow(ByVal row As ProjectSettingsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddProjectSettingsRow( _
                    ByVal ProjectFile As String,  _
                    ByVal GRMSimulationType As String,  _
                    ByVal WatershedFile As String,  _
                    ByVal SlopeFile As String,  _
                    ByVal FlowDirectionFile As String,  _
                    ByVal FlowAccumFile As String,  _
                    ByVal StreamFile As String,  _
                    ByVal ChannelWidthFile As String,  _
                    ByVal LandCoverDataType As String,  _
                    ByVal LandCoverFile As String,  _
                    ByVal LandCoverVATFile As String,  _
                    ByVal ConstantRoughnessCoeff As String,  _
                    ByVal ConstantImperviousRatio As String,  _
                    ByVal SoilTextureDataType As String,  _
                    ByVal SoilTextureFile As String,  _
                    ByVal SoilTextureVATFile As String,  _
                    ByVal ConstantSoilPorosity As String,  _
                    ByVal ConstantSoilEffPorosity As String,  _
                    ByVal ConstantSoilWettingFrontSuctionHead As String,  _
                    ByVal ConstantSoilHydraulicConductivity As String,  _
                    ByVal SoilDepthDataType As String,  _
                    ByVal SoilDepthFile As String,  _
                    ByVal SoilDepthVATFile As String,  _
                    ByVal ConstantSoilDepth As String,  _
                    ByVal InitialSoilSaturationRatioFile As String,  _
                    ByVal InitialChannelFlowFile As String,  _
                    ByVal RainfallDataType As String,  _
                    ByVal RainfallInterval As String,  _
                    ByVal RainfallDataFile As String,  _
                    ByVal FlowDirectionType As String,  _
                    ByVal GridCellSize As String,  _
                    ByVal IsParallel As String,  _
                    ByVal MaxDegreeOfParallelism As String,  _
                    ByVal SimulStartingTime As String,  _
                    ByVal SimulationDuration As String,  _
                    ByVal ComputationalTimeStep As String,  _
                    ByVal IsFixedTimeStep As String,  _
                    ByVal OutputTimeStep As String,  _
                    ByVal CrossSectionType As String,  _
                    ByVal SingleCSChannelWidthType As String,  _
                    ByVal ChannelWidthEQc As String,  _
                    ByVal ChannelWidthEQd As String,  _
                    ByVal ChannelWidthEQe As String,  _
                    ByVal ChannelWidthMostDownStream As String,  _
                    ByVal LowerRegionHeight As String,  _
                    ByVal LowerRegionBaseWidth As String,  _
                    ByVal UpperRegionBaseWidth As String,  _
                    ByVal CompoundCSChannelWidthLimit As String,  _
                    ByVal BankSideSlopeRight As String,  _
                    ByVal BankSideSlopeLeft As String,  _
                    ByVal SimulateInfiltration As String,  _
                    ByVal SimulateSubsurfaceFlow As String,  _
                    ByVal SimulateBaseFlow As String,  _
                    ByVal SimulateFlowControl As String,  _
                    ByVal MakeIMGFile As String,  _
                    ByVal MakeASCFile As String,  _
                    ByVal MakeSoilSaturationDistFile As String,  _
                    ByVal MakeRfDistFile As String,  _
                    ByVal MakeRFaccDistFile As String,  _
                    ByVal MakeFlowDistFile As String,  _
                    ByVal PrintOption As String,  _
                    ByVal WriteLog As String,  _
                    ByVal AboutThisProject As String,  _
                    ByVal AboutWatershed As String,  _
                    ByVal AboutLandCoverMap As String,  _
                    ByVal AboutSoilMap As String,  _
                    ByVal AboutSoilDepthMap As String,  _
                    ByVal AboutRainfall As String,  _
                    ByVal ProjectSavedTime As String,  _
                    ByVal ComputerName As String,  _
                    ByVal ComputerUserName As String,  _
                    ByVal GRMVersion As String) As ProjectSettingsRow
            Dim rowProjectSettingsRow As ProjectSettingsRow = CType(Me.NewRow,ProjectSettingsRow)
            Dim columnValuesArray() As Object = New Object() {ProjectFile, GRMSimulationType, WatershedFile, SlopeFile, FlowDirectionFile, FlowAccumFile, StreamFile, ChannelWidthFile, LandCoverDataType, LandCoverFile, LandCoverVATFile, ConstantRoughnessCoeff, ConstantImperviousRatio, SoilTextureDataType, SoilTextureFile, SoilTextureVATFile, ConstantSoilPorosity, ConstantSoilEffPorosity, ConstantSoilWettingFrontSuctionHead, ConstantSoilHydraulicConductivity, SoilDepthDataType, SoilDepthFile, SoilDepthVATFile, ConstantSoilDepth, InitialSoilSaturationRatioFile, InitialChannelFlowFile, RainfallDataType, RainfallInterval, RainfallDataFile, FlowDirectionType, GridCellSize, IsParallel, MaxDegreeOfParallelism, SimulStartingTime, SimulationDuration, ComputationalTimeStep, IsFixedTimeStep, OutputTimeStep, CrossSectionType, SingleCSChannelWidthType, ChannelWidthEQc, ChannelWidthEQd, ChannelWidthEQe, ChannelWidthMostDownStream, LowerRegionHeight, LowerRegionBaseWidth, UpperRegionBaseWidth, CompoundCSChannelWidthLimit, BankSideSlopeRight, BankSideSlopeLeft, SimulateInfiltration, SimulateSubsurfaceFlow, SimulateBaseFlow, SimulateFlowControl, MakeIMGFile, MakeASCFile, MakeSoilSaturationDistFile, MakeRfDistFile, MakeRFaccDistFile, MakeFlowDistFile, PrintOption, WriteLog, AboutThisProject, AboutWatershed, AboutLandCoverMap, AboutSoilMap, AboutSoilDepthMap, AboutRainfall, ProjectSavedTime, ComputerName, ComputerUserName, GRMVersion}
            rowProjectSettingsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowProjectSettingsRow)
            Return rowProjectSettingsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ProjectSettingsDataTable = CType(MyBase.Clone,ProjectSettingsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ProjectSettingsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectFile = MyBase.Columns("ProjectFile")
            Me.columnGRMSimulationType = MyBase.Columns("GRMSimulationType")
            Me.columnWatershedFile = MyBase.Columns("WatershedFile")
            Me.columnSlopeFile = MyBase.Columns("SlopeFile")
            Me.columnFlowDirectionFile = MyBase.Columns("FlowDirectionFile")
            Me.columnFlowAccumFile = MyBase.Columns("FlowAccumFile")
            Me.columnStreamFile = MyBase.Columns("StreamFile")
            Me.columnChannelWidthFile = MyBase.Columns("ChannelWidthFile")
            Me.columnLandCoverDataType = MyBase.Columns("LandCoverDataType")
            Me.columnLandCoverFile = MyBase.Columns("LandCoverFile")
            Me.columnLandCoverVATFile = MyBase.Columns("LandCoverVATFile")
            Me.columnConstantRoughnessCoeff = MyBase.Columns("ConstantRoughnessCoeff")
            Me.columnConstantImperviousRatio = MyBase.Columns("ConstantImperviousRatio")
            Me.columnSoilTextureDataType = MyBase.Columns("SoilTextureDataType")
            Me.columnSoilTextureFile = MyBase.Columns("SoilTextureFile")
            Me.columnSoilTextureVATFile = MyBase.Columns("SoilTextureVATFile")
            Me.columnConstantSoilPorosity = MyBase.Columns("ConstantSoilPorosity")
            Me.columnConstantSoilEffPorosity = MyBase.Columns("ConstantSoilEffPorosity")
            Me.columnConstantSoilWettingFrontSuctionHead = MyBase.Columns("ConstantSoilWettingFrontSuctionHead")
            Me.columnConstantSoilHydraulicConductivity = MyBase.Columns("ConstantSoilHydraulicConductivity")
            Me.columnSoilDepthDataType = MyBase.Columns("SoilDepthDataType")
            Me.columnSoilDepthFile = MyBase.Columns("SoilDepthFile")
            Me.columnSoilDepthVATFile = MyBase.Columns("SoilDepthVATFile")
            Me.columnConstantSoilDepth = MyBase.Columns("ConstantSoilDepth")
            Me.columnInitialSoilSaturationRatioFile = MyBase.Columns("InitialSoilSaturationRatioFile")
            Me.columnInitialChannelFlowFile = MyBase.Columns("InitialChannelFlowFile")
            Me.columnRainfallDataType = MyBase.Columns("RainfallDataType")
            Me.columnRainfallInterval = MyBase.Columns("RainfallInterval")
            Me.columnRainfallDataFile = MyBase.Columns("RainfallDataFile")
            Me.columnFlowDirectionType = MyBase.Columns("FlowDirectionType")
            Me.columnGridCellSize = MyBase.Columns("GridCellSize")
            Me.columnIsParallel = MyBase.Columns("IsParallel")
            Me.columnMaxDegreeOfParallelism = MyBase.Columns("MaxDegreeOfParallelism")
            Me.columnSimulStartingTime = MyBase.Columns("SimulStartingTime")
            Me.columnSimulationDuration = MyBase.Columns("SimulationDuration")
            Me.columnComputationalTimeStep = MyBase.Columns("ComputationalTimeStep")
            Me.columnIsFixedTimeStep = MyBase.Columns("IsFixedTimeStep")
            Me.columnOutputTimeStep = MyBase.Columns("OutputTimeStep")
            Me.columnCrossSectionType = MyBase.Columns("CrossSectionType")
            Me.columnSingleCSChannelWidthType = MyBase.Columns("SingleCSChannelWidthType")
            Me.columnChannelWidthEQc = MyBase.Columns("ChannelWidthEQc")
            Me.columnChannelWidthEQd = MyBase.Columns("ChannelWidthEQd")
            Me.columnChannelWidthEQe = MyBase.Columns("ChannelWidthEQe")
            Me.columnChannelWidthMostDownStream = MyBase.Columns("ChannelWidthMostDownStream")
            Me.columnLowerRegionHeight = MyBase.Columns("LowerRegionHeight")
            Me.columnLowerRegionBaseWidth = MyBase.Columns("LowerRegionBaseWidth")
            Me.columnUpperRegionBaseWidth = MyBase.Columns("UpperRegionBaseWidth")
            Me.columnCompoundCSChannelWidthLimit = MyBase.Columns("CompoundCSChannelWidthLimit")
            Me.columnBankSideSlopeRight = MyBase.Columns("BankSideSlopeRight")
            Me.columnBankSideSlopeLeft = MyBase.Columns("BankSideSlopeLeft")
            Me.columnSimulateInfiltration = MyBase.Columns("SimulateInfiltration")
            Me.columnSimulateSubsurfaceFlow = MyBase.Columns("SimulateSubsurfaceFlow")
            Me.columnSimulateBaseFlow = MyBase.Columns("SimulateBaseFlow")
            Me.columnSimulateFlowControl = MyBase.Columns("SimulateFlowControl")
            Me.columnMakeIMGFile = MyBase.Columns("MakeIMGFile")
            Me.columnMakeASCFile = MyBase.Columns("MakeASCFile")
            Me.columnMakeSoilSaturationDistFile = MyBase.Columns("MakeSoilSaturationDistFile")
            Me.columnMakeRfDistFile = MyBase.Columns("MakeRfDistFile")
            Me.columnMakeRFaccDistFile = MyBase.Columns("MakeRFaccDistFile")
            Me.columnMakeFlowDistFile = MyBase.Columns("MakeFlowDistFile")
            Me.columnPrintOption = MyBase.Columns("PrintOption")
            Me.columnWriteLog = MyBase.Columns("WriteLog")
            Me.columnAboutThisProject = MyBase.Columns("AboutThisProject")
            Me.columnAboutWatershed = MyBase.Columns("AboutWatershed")
            Me.columnAboutLandCoverMap = MyBase.Columns("AboutLandCoverMap")
            Me.columnAboutSoilMap = MyBase.Columns("AboutSoilMap")
            Me.columnAboutSoilDepthMap = MyBase.Columns("AboutSoilDepthMap")
            Me.columnAboutRainfall = MyBase.Columns("AboutRainfall")
            Me.columnProjectSavedTime = MyBase.Columns("ProjectSavedTime")
            Me.columnComputerName = MyBase.Columns("ComputerName")
            Me.columnComputerUserName = MyBase.Columns("ComputerUserName")
            Me.columnGRMVersion = MyBase.Columns("GRMVersion")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectFile = New Global.System.Data.DataColumn("ProjectFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectFile)
            Me.columnGRMSimulationType = New Global.System.Data.DataColumn("GRMSimulationType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMSimulationType)
            Me.columnWatershedFile = New Global.System.Data.DataColumn("WatershedFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWatershedFile)
            Me.columnSlopeFile = New Global.System.Data.DataColumn("SlopeFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFile)
            Me.columnFlowDirectionFile = New Global.System.Data.DataColumn("FlowDirectionFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlowDirectionFile)
            Me.columnFlowAccumFile = New Global.System.Data.DataColumn("FlowAccumFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlowAccumFile)
            Me.columnStreamFile = New Global.System.Data.DataColumn("StreamFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreamFile)
            Me.columnChannelWidthFile = New Global.System.Data.DataColumn("ChannelWidthFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannelWidthFile)
            Me.columnLandCoverDataType = New Global.System.Data.DataColumn("LandCoverDataType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLandCoverDataType)
            Me.columnLandCoverFile = New Global.System.Data.DataColumn("LandCoverFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLandCoverFile)
            Me.columnLandCoverVATFile = New Global.System.Data.DataColumn("LandCoverVATFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLandCoverVATFile)
            Me.columnConstantRoughnessCoeff = New Global.System.Data.DataColumn("ConstantRoughnessCoeff", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantRoughnessCoeff)
            Me.columnConstantImperviousRatio = New Global.System.Data.DataColumn("ConstantImperviousRatio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantImperviousRatio)
            Me.columnSoilTextureDataType = New Global.System.Data.DataColumn("SoilTextureDataType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilTextureDataType)
            Me.columnSoilTextureFile = New Global.System.Data.DataColumn("SoilTextureFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilTextureFile)
            Me.columnSoilTextureVATFile = New Global.System.Data.DataColumn("SoilTextureVATFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilTextureVATFile)
            Me.columnConstantSoilPorosity = New Global.System.Data.DataColumn("ConstantSoilPorosity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantSoilPorosity)
            Me.columnConstantSoilEffPorosity = New Global.System.Data.DataColumn("ConstantSoilEffPorosity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantSoilEffPorosity)
            Me.columnConstantSoilWettingFrontSuctionHead = New Global.System.Data.DataColumn("ConstantSoilWettingFrontSuctionHead", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantSoilWettingFrontSuctionHead)
            Me.columnConstantSoilHydraulicConductivity = New Global.System.Data.DataColumn("ConstantSoilHydraulicConductivity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantSoilHydraulicConductivity)
            Me.columnSoilDepthDataType = New Global.System.Data.DataColumn("SoilDepthDataType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilDepthDataType)
            Me.columnSoilDepthFile = New Global.System.Data.DataColumn("SoilDepthFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilDepthFile)
            Me.columnSoilDepthVATFile = New Global.System.Data.DataColumn("SoilDepthVATFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilDepthVATFile)
            Me.columnConstantSoilDepth = New Global.System.Data.DataColumn("ConstantSoilDepth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConstantSoilDepth)
            Me.columnInitialSoilSaturationRatioFile = New Global.System.Data.DataColumn("InitialSoilSaturationRatioFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInitialSoilSaturationRatioFile)
            Me.columnInitialChannelFlowFile = New Global.System.Data.DataColumn("InitialChannelFlowFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInitialChannelFlowFile)
            Me.columnRainfallDataType = New Global.System.Data.DataColumn("RainfallDataType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRainfallDataType)
            Me.columnRainfallInterval = New Global.System.Data.DataColumn("RainfallInterval", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRainfallInterval)
            Me.columnRainfallDataFile = New Global.System.Data.DataColumn("RainfallDataFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRainfallDataFile)
            Me.columnFlowDirectionType = New Global.System.Data.DataColumn("FlowDirectionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlowDirectionType)
            Me.columnGridCellSize = New Global.System.Data.DataColumn("GridCellSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGridCellSize)
            Me.columnIsParallel = New Global.System.Data.DataColumn("IsParallel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsParallel)
            Me.columnMaxDegreeOfParallelism = New Global.System.Data.DataColumn("MaxDegreeOfParallelism", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxDegreeOfParallelism)
            Me.columnSimulStartingTime = New Global.System.Data.DataColumn("SimulStartingTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimulStartingTime)
            Me.columnSimulationDuration = New Global.System.Data.DataColumn("SimulationDuration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimulationDuration)
            Me.columnComputationalTimeStep = New Global.System.Data.DataColumn("ComputationalTimeStep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComputationalTimeStep)
            Me.columnIsFixedTimeStep = New Global.System.Data.DataColumn("IsFixedTimeStep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsFixedTimeStep)
            Me.columnOutputTimeStep = New Global.System.Data.DataColumn("OutputTimeStep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutputTimeStep)
            Me.columnCrossSectionType = New Global.System.Data.DataColumn("CrossSectionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCrossSectionType)
            Me.columnSingleCSChannelWidthType = New Global.System.Data.DataColumn("SingleCSChannelWidthType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSingleCSChannelWidthType)
            Me.columnChannelWidthEQc = New Global.System.Data.DataColumn("ChannelWidthEQc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannelWidthEQc)
            Me.columnChannelWidthEQd = New Global.System.Data.DataColumn("ChannelWidthEQd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannelWidthEQd)
            Me.columnChannelWidthEQe = New Global.System.Data.DataColumn("ChannelWidthEQe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannelWidthEQe)
            Me.columnChannelWidthMostDownStream = New Global.System.Data.DataColumn("ChannelWidthMostDownStream", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannelWidthMostDownStream)
            Me.columnLowerRegionHeight = New Global.System.Data.DataColumn("LowerRegionHeight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowerRegionHeight)
            Me.columnLowerRegionBaseWidth = New Global.System.Data.DataColumn("LowerRegionBaseWidth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLowerRegionBaseWidth)
            Me.columnUpperRegionBaseWidth = New Global.System.Data.DataColumn("UpperRegionBaseWidth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpperRegionBaseWidth)
            Me.columnCompoundCSChannelWidthLimit = New Global.System.Data.DataColumn("CompoundCSChannelWidthLimit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompoundCSChannelWidthLimit)
            Me.columnBankSideSlopeRight = New Global.System.Data.DataColumn("BankSideSlopeRight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankSideSlopeRight)
            Me.columnBankSideSlopeLeft = New Global.System.Data.DataColumn("BankSideSlopeLeft", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankSideSlopeLeft)
            Me.columnSimulateInfiltration = New Global.System.Data.DataColumn("SimulateInfiltration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimulateInfiltration)
            Me.columnSimulateSubsurfaceFlow = New Global.System.Data.DataColumn("SimulateSubsurfaceFlow", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimulateSubsurfaceFlow)
            Me.columnSimulateBaseFlow = New Global.System.Data.DataColumn("SimulateBaseFlow", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimulateBaseFlow)
            Me.columnSimulateFlowControl = New Global.System.Data.DataColumn("SimulateFlowControl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimulateFlowControl)
            Me.columnMakeIMGFile = New Global.System.Data.DataColumn("MakeIMGFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMakeIMGFile)
            Me.columnMakeASCFile = New Global.System.Data.DataColumn("MakeASCFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMakeASCFile)
            Me.columnMakeSoilSaturationDistFile = New Global.System.Data.DataColumn("MakeSoilSaturationDistFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMakeSoilSaturationDistFile)
            Me.columnMakeRfDistFile = New Global.System.Data.DataColumn("MakeRfDistFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMakeRfDistFile)
            Me.columnMakeRFaccDistFile = New Global.System.Data.DataColumn("MakeRFaccDistFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMakeRFaccDistFile)
            Me.columnMakeFlowDistFile = New Global.System.Data.DataColumn("MakeFlowDistFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMakeFlowDistFile)
            Me.columnPrintOption = New Global.System.Data.DataColumn("PrintOption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintOption)
            Me.columnWriteLog = New Global.System.Data.DataColumn("WriteLog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWriteLog)
            Me.columnAboutThisProject = New Global.System.Data.DataColumn("AboutThisProject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboutThisProject)
            Me.columnAboutWatershed = New Global.System.Data.DataColumn("AboutWatershed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboutWatershed)
            Me.columnAboutLandCoverMap = New Global.System.Data.DataColumn("AboutLandCoverMap", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboutLandCoverMap)
            Me.columnAboutSoilMap = New Global.System.Data.DataColumn("AboutSoilMap", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboutSoilMap)
            Me.columnAboutSoilDepthMap = New Global.System.Data.DataColumn("AboutSoilDepthMap", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboutSoilDepthMap)
            Me.columnAboutRainfall = New Global.System.Data.DataColumn("AboutRainfall", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAboutRainfall)
            Me.columnProjectSavedTime = New Global.System.Data.DataColumn("ProjectSavedTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectSavedTime)
            Me.columnComputerName = New Global.System.Data.DataColumn("ComputerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComputerName)
            Me.columnComputerUserName = New Global.System.Data.DataColumn("ComputerUserName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComputerUserName)
            Me.columnGRMVersion = New Global.System.Data.DataColumn("GRMVersion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMVersion)
            Me.columnProjectFile.AllowDBNull = false
            Me.columnFlowDirectionType.Caption = "GridCellSize"
            Me.columnMaxDegreeOfParallelism.Caption = "IsParallel"
            Me.columnIsFixedTimeStep.Caption = "MakeASCFile"
            Me.columnMakeSoilSaturationDistFile.Caption = "DataColumn1"
            Me.columnMakeRfDistFile.Caption = "DataColumn2"
            Me.columnMakeRFaccDistFile.Caption = "DataColumn3"
            Me.columnMakeFlowDistFile.Caption = "DataColumn4"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewProjectSettingsRow() As ProjectSettingsRow
            Return CType(Me.NewRow,ProjectSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ProjectSettingsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ProjectSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ProjectSettingsRowChangedEvent) Is Nothing) Then
                RaiseEvent ProjectSettingsRowChanged(Me, New ProjectSettingsRowChangeEvent(CType(e.Row,ProjectSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ProjectSettingsRowChangingEvent) Is Nothing) Then
                RaiseEvent ProjectSettingsRowChanging(Me, New ProjectSettingsRowChangeEvent(CType(e.Row,ProjectSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ProjectSettingsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ProjectSettingsRowDeleted(Me, New ProjectSettingsRowChangeEvent(CType(e.Row,ProjectSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ProjectSettingsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ProjectSettingsRowDeleting(Me, New ProjectSettingsRowChangeEvent(CType(e.Row,ProjectSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveProjectSettingsRow(ByVal row As ProjectSettingsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ProjectSettingsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SubWatershedSettingsDataTable
        Inherits Global.System.Data.TypedTableBase(Of SubWatershedSettingsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIniSaturation As Global.System.Data.DataColumn
        
        Private columnMinSlopeOF As Global.System.Data.DataColumn
        
        Private columnMinSlopeChBed As Global.System.Data.DataColumn
        
        Private columnMinChBaseWidth As Global.System.Data.DataColumn
        
        Private columnChRoughness As Global.System.Data.DataColumn
        
        Private columnDryStreamOrder As Global.System.Data.DataColumn
        
        Private columnIniFlow As Global.System.Data.DataColumn
        
        Private columnCalCoefLCRoughness As Global.System.Data.DataColumn
        
        Private columnCalCoefPorosity As Global.System.Data.DataColumn
        
        Private columnCalCoefWFSuctionHead As Global.System.Data.DataColumn
        
        Private columnCalCoefHydraulicK As Global.System.Data.DataColumn
        
        Private columnCalCoefSoilDepth As Global.System.Data.DataColumn
        
        Private columnPowerCeofUnSaturatedK As Global.System.Data.DataColumn
        
        Private columnUserSet As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SubWatershedSettings"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IniSaturationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIniSaturation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MinSlopeOFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinSlopeOF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MinSlopeChBedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinSlopeChBed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MinChBaseWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinChBaseWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChRoughnessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChRoughness
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DryStreamOrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDryStreamOrder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IniFlowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIniFlow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CalCoefLCRoughnessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalCoefLCRoughness
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CalCoefPorosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalCoefPorosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CalCoefWFSuctionHeadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalCoefWFSuctionHead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CalCoefHydraulicKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalCoefHydraulicK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CalCoefSoilDepthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalCoefSoilDepth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PowerCeofUnSaturatedKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPowerCeofUnSaturatedK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UserSetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserSet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SubWatershedSettingsRow
            Get
                Return CType(Me.Rows(index),SubWatershedSettingsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SubWatershedSettingsRowChanging As SubWatershedSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SubWatershedSettingsRowChanged As SubWatershedSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SubWatershedSettingsRowDeleting As SubWatershedSettingsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SubWatershedSettingsRowDeleted As SubWatershedSettingsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSubWatershedSettingsRow(ByVal row As SubWatershedSettingsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSubWatershedSettingsRow(ByVal ID As Integer, ByVal IniSaturation As Single, ByVal MinSlopeOF As Single, ByVal MinSlopeChBed As Single, ByVal MinChBaseWidth As Single, ByVal ChRoughness As Single, ByVal DryStreamOrder As Integer, ByVal IniFlow As Single, ByVal CalCoefLCRoughness As Single, ByVal CalCoefPorosity As Single, ByVal CalCoefWFSuctionHead As Single, ByVal CalCoefHydraulicK As Single, ByVal CalCoefSoilDepth As Single, ByVal PowerCeofUnSaturatedK As Single, ByVal UserSet As Boolean) As SubWatershedSettingsRow
            Dim rowSubWatershedSettingsRow As SubWatershedSettingsRow = CType(Me.NewRow,SubWatershedSettingsRow)
            Dim columnValuesArray() As Object = New Object() {ID, IniSaturation, MinSlopeOF, MinSlopeChBed, MinChBaseWidth, ChRoughness, DryStreamOrder, IniFlow, CalCoefLCRoughness, CalCoefPorosity, CalCoefWFSuctionHead, CalCoefHydraulicK, CalCoefSoilDepth, PowerCeofUnSaturatedK, UserSet}
            rowSubWatershedSettingsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSubWatershedSettingsRow)
            Return rowSubWatershedSettingsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SubWatershedSettingsDataTable = CType(MyBase.Clone,SubWatershedSettingsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SubWatershedSettingsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIniSaturation = MyBase.Columns("IniSaturation")
            Me.columnMinSlopeOF = MyBase.Columns("MinSlopeOF")
            Me.columnMinSlopeChBed = MyBase.Columns("MinSlopeChBed")
            Me.columnMinChBaseWidth = MyBase.Columns("MinChBaseWidth")
            Me.columnChRoughness = MyBase.Columns("ChRoughness")
            Me.columnDryStreamOrder = MyBase.Columns("DryStreamOrder")
            Me.columnIniFlow = MyBase.Columns("IniFlow")
            Me.columnCalCoefLCRoughness = MyBase.Columns("CalCoefLCRoughness")
            Me.columnCalCoefPorosity = MyBase.Columns("CalCoefPorosity")
            Me.columnCalCoefWFSuctionHead = MyBase.Columns("CalCoefWFSuctionHead")
            Me.columnCalCoefHydraulicK = MyBase.Columns("CalCoefHydraulicK")
            Me.columnCalCoefSoilDepth = MyBase.Columns("CalCoefSoilDepth")
            Me.columnPowerCeofUnSaturatedK = MyBase.Columns("PowerCeofUnSaturatedK")
            Me.columnUserSet = MyBase.Columns("UserSet")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIniSaturation = New Global.System.Data.DataColumn("IniSaturation", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIniSaturation)
            Me.columnMinSlopeOF = New Global.System.Data.DataColumn("MinSlopeOF", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinSlopeOF)
            Me.columnMinSlopeChBed = New Global.System.Data.DataColumn("MinSlopeChBed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinSlopeChBed)
            Me.columnMinChBaseWidth = New Global.System.Data.DataColumn("MinChBaseWidth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinChBaseWidth)
            Me.columnChRoughness = New Global.System.Data.DataColumn("ChRoughness", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChRoughness)
            Me.columnDryStreamOrder = New Global.System.Data.DataColumn("DryStreamOrder", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDryStreamOrder)
            Me.columnIniFlow = New Global.System.Data.DataColumn("IniFlow", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIniFlow)
            Me.columnCalCoefLCRoughness = New Global.System.Data.DataColumn("CalCoefLCRoughness", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalCoefLCRoughness)
            Me.columnCalCoefPorosity = New Global.System.Data.DataColumn("CalCoefPorosity", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalCoefPorosity)
            Me.columnCalCoefWFSuctionHead = New Global.System.Data.DataColumn("CalCoefWFSuctionHead", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalCoefWFSuctionHead)
            Me.columnCalCoefHydraulicK = New Global.System.Data.DataColumn("CalCoefHydraulicK", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalCoefHydraulicK)
            Me.columnCalCoefSoilDepth = New Global.System.Data.DataColumn("CalCoefSoilDepth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalCoefSoilDepth)
            Me.columnPowerCeofUnSaturatedK = New Global.System.Data.DataColumn("PowerCeofUnSaturatedK", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPowerCeofUnSaturatedK)
            Me.columnUserSet = New Global.System.Data.DataColumn("UserSet", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserSet)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("WatershedSettingsKey1", New Global.System.Data.DataColumn() {Me.columnID}, false))
            Me.columnID.Unique = true
            Me.columnIniSaturation.AllowDBNull = false
            Me.columnPowerCeofUnSaturatedK.Caption = "CalCoefUnSaturatedK"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSubWatershedSettingsRow() As SubWatershedSettingsRow
            Return CType(Me.NewRow,SubWatershedSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SubWatershedSettingsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SubWatershedSettingsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SubWatershedSettingsRowChangedEvent) Is Nothing) Then
                RaiseEvent SubWatershedSettingsRowChanged(Me, New SubWatershedSettingsRowChangeEvent(CType(e.Row,SubWatershedSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SubWatershedSettingsRowChangingEvent) Is Nothing) Then
                RaiseEvent SubWatershedSettingsRowChanging(Me, New SubWatershedSettingsRowChangeEvent(CType(e.Row,SubWatershedSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SubWatershedSettingsRowDeletedEvent) Is Nothing) Then
                RaiseEvent SubWatershedSettingsRowDeleted(Me, New SubWatershedSettingsRowChangeEvent(CType(e.Row,SubWatershedSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SubWatershedSettingsRowDeletingEvent) Is Nothing) Then
                RaiseEvent SubWatershedSettingsRowDeleting(Me, New SubWatershedSettingsRowChangeEvent(CType(e.Row,SubWatershedSettingsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSubWatershedSettingsRow(ByVal row As SubWatershedSettingsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SubWatershedSettingsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RTenvDataTable
        Inherits Global.System.Data.TypedTableBase(Of RTenvRow)
        
        Private columnProjectFPN As Global.System.Data.DataColumn
        
        Private columnRTRFfolderName As Global.System.Data.DataColumn
        
        Private columnRTFCdataFPN As Global.System.Data.DataColumn
        
        Private columnIsFC As Global.System.Data.DataColumn
        
        Private columnIsDWSSexist As Global.System.Data.DataColumn
        
        Private columnCWSSCVIDtoConnectWithDWSS As Global.System.Data.DataColumn
        
        Private columnDWSSCVIDtoConnectWithUWSS As Global.System.Data.DataColumn
        
        Private columnFPNDWSSFCdata As Global.System.Data.DataColumn
        
        Private columnRFInterval_min As Global.System.Data.DataColumn
        
        Private columnOutputInterval_min As Global.System.Data.DataColumn
        
        Private columnRTstartingTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RTenv"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectFPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectFPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RTRFfolderNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTRFfolderName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RTFCdataFPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTFCdataFPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IsFCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsFC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IsDWSSexistColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsDWSSexist
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CWSSCVIDtoConnectWithDWSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCWSSCVIDtoConnectWithDWSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DWSSCVIDtoConnectWithUWSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDWSSCVIDtoConnectWithUWSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FPNDWSSFCdataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFPNDWSSFCdata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RFInterval_minColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRFInterval_min
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OutputInterval_minColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutputInterval_min
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RTstartingTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTstartingTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RTenvRow
            Get
                Return CType(Me.Rows(index),RTenvRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RTenvRowChanging As RTenvRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RTenvRowChanged As RTenvRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RTenvRowDeleting As RTenvRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RTenvRowDeleted As RTenvRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddRTenvRow(ByVal row As RTenvRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddRTenvRow(ByVal ProjectFPN As String, ByVal RTRFfolderName As String, ByVal RTFCdataFPN As String, ByVal IsFC As Boolean, ByVal IsDWSSexist As Boolean, ByVal CWSSCVIDtoConnectWithDWSS As Integer, ByVal DWSSCVIDtoConnectWithUWSS As Integer, ByVal FPNDWSSFCdata As String, ByVal RFInterval_min As Integer, ByVal OutputInterval_min As Integer, ByVal RTstartingTime As String) As RTenvRow
            Dim rowRTenvRow As RTenvRow = CType(Me.NewRow,RTenvRow)
            Dim columnValuesArray() As Object = New Object() {ProjectFPN, RTRFfolderName, RTFCdataFPN, IsFC, IsDWSSexist, CWSSCVIDtoConnectWithDWSS, DWSSCVIDtoConnectWithUWSS, FPNDWSSFCdata, RFInterval_min, OutputInterval_min, RTstartingTime}
            rowRTenvRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRTenvRow)
            Return rowRTenvRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RTenvDataTable = CType(MyBase.Clone,RTenvDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RTenvDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectFPN = MyBase.Columns("ProjectFPN")
            Me.columnRTRFfolderName = MyBase.Columns("RTRFfolderName")
            Me.columnRTFCdataFPN = MyBase.Columns("RTFCdataFPN")
            Me.columnIsFC = MyBase.Columns("IsFC")
            Me.columnIsDWSSexist = MyBase.Columns("IsDWSSexist")
            Me.columnCWSSCVIDtoConnectWithDWSS = MyBase.Columns("CWSSCVIDtoConnectWithDWSS")
            Me.columnDWSSCVIDtoConnectWithUWSS = MyBase.Columns("DWSSCVIDtoConnectWithUWSS")
            Me.columnFPNDWSSFCdata = MyBase.Columns("FPNDWSSFCdata")
            Me.columnRFInterval_min = MyBase.Columns("RFInterval_min")
            Me.columnOutputInterval_min = MyBase.Columns("OutputInterval_min")
            Me.columnRTstartingTime = MyBase.Columns("RTstartingTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectFPN = New Global.System.Data.DataColumn("ProjectFPN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectFPN)
            Me.columnRTRFfolderName = New Global.System.Data.DataColumn("RTRFfolderName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTRFfolderName)
            Me.columnRTFCdataFPN = New Global.System.Data.DataColumn("RTFCdataFPN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTFCdataFPN)
            Me.columnIsFC = New Global.System.Data.DataColumn("IsFC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsFC)
            Me.columnIsDWSSexist = New Global.System.Data.DataColumn("IsDWSSexist", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsDWSSexist)
            Me.columnCWSSCVIDtoConnectWithDWSS = New Global.System.Data.DataColumn("CWSSCVIDtoConnectWithDWSS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCWSSCVIDtoConnectWithDWSS)
            Me.columnDWSSCVIDtoConnectWithUWSS = New Global.System.Data.DataColumn("DWSSCVIDtoConnectWithUWSS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDWSSCVIDtoConnectWithUWSS)
            Me.columnFPNDWSSFCdata = New Global.System.Data.DataColumn("FPNDWSSFCdata", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFPNDWSSFCdata)
            Me.columnRFInterval_min = New Global.System.Data.DataColumn("RFInterval_min", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRFInterval_min)
            Me.columnOutputInterval_min = New Global.System.Data.DataColumn("OutputInterval_min", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutputInterval_min)
            Me.columnRTstartingTime = New Global.System.Data.DataColumn("RTstartingTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTstartingTime)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewRTenvRow() As RTenvRow
            Return CType(Me.NewRow,RTenvRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RTenvRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RTenvRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RTenvRowChangedEvent) Is Nothing) Then
                RaiseEvent RTenvRowChanged(Me, New RTenvRowChangeEvent(CType(e.Row,RTenvRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RTenvRowChangingEvent) Is Nothing) Then
                RaiseEvent RTenvRowChanging(Me, New RTenvRowChangeEvent(CType(e.Row,RTenvRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RTenvRowDeletedEvent) Is Nothing) Then
                RaiseEvent RTenvRowDeleted(Me, New RTenvRowChangeEvent(CType(e.Row,RTenvRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RTenvRowDeletingEvent) Is Nothing) Then
                RaiseEvent RTenvRowDeleting(Me, New RTenvRowChangeEvent(CType(e.Row,RTenvRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveRTenvRow(ByVal row As RTenvRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RTenvDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WatchPointsDataTable
        Inherits Global.System.Data.TypedTableBase(Of WatchPointsRow)
        
        Private columnCVID As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnColX As Global.System.Data.DataColumn
        
        Private columnRowY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WatchPoints"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CVIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCVID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ColXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RowYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WatchPointsRow
            Get
                Return CType(Me.Rows(index),WatchPointsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WatchPointsRowChanging As WatchPointsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WatchPointsRowChanged As WatchPointsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WatchPointsRowDeleting As WatchPointsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event WatchPointsRowDeleted As WatchPointsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddWatchPointsRow(ByVal row As WatchPointsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddWatchPointsRow(ByVal CVID As Integer, ByVal Name As String, ByVal ColX As Integer, ByVal RowY As Integer) As WatchPointsRow
            Dim rowWatchPointsRow As WatchPointsRow = CType(Me.NewRow,WatchPointsRow)
            Dim columnValuesArray() As Object = New Object() {CVID, Name, ColX, RowY}
            rowWatchPointsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWatchPointsRow)
            Return rowWatchPointsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WatchPointsDataTable = CType(MyBase.Clone,WatchPointsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WatchPointsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCVID = MyBase.Columns("CVID")
            Me.columnName = MyBase.Columns("Name")
            Me.columnColX = MyBase.Columns("ColX")
            Me.columnRowY = MyBase.Columns("RowY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCVID = New Global.System.Data.DataColumn("CVID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCVID)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnColX = New Global.System.Data.DataColumn("ColX", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColX)
            Me.columnRowY = New Global.System.Data.DataColumn("RowY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowY)
            Me.columnName.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewWatchPointsRow() As WatchPointsRow
            Return CType(Me.NewRow,WatchPointsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WatchPointsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WatchPointsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WatchPointsRowChangedEvent) Is Nothing) Then
                RaiseEvent WatchPointsRowChanged(Me, New WatchPointsRowChangeEvent(CType(e.Row,WatchPointsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WatchPointsRowChangingEvent) Is Nothing) Then
                RaiseEvent WatchPointsRowChanging(Me, New WatchPointsRowChangeEvent(CType(e.Row,WatchPointsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WatchPointsRowDeletedEvent) Is Nothing) Then
                RaiseEvent WatchPointsRowDeleted(Me, New WatchPointsRowChangeEvent(CType(e.Row,WatchPointsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WatchPointsRowDeletingEvent) Is Nothing) Then
                RaiseEvent WatchPointsRowDeleting(Me, New WatchPointsRowChangeEvent(CType(e.Row,WatchPointsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveWatchPointsRow(ByVal row As WatchPointsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WatchPointsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GreenAmptParameterDataTable
        Inherits Global.System.Data.TypedTableBase(Of GreenAmptParameterRow)
        
        Private columnGridValue As Global.System.Data.DataColumn
        
        Private columnUSERSoil As Global.System.Data.DataColumn
        
        Private columnGRMCode As Global.System.Data.DataColumn
        
        Private columnGRMTextureE As Global.System.Data.DataColumn
        
        Private columnGRMTextureK As Global.System.Data.DataColumn
        
        Private columnPorosity As Global.System.Data.DataColumn
        
        Private columnEffectivePorosity As Global.System.Data.DataColumn
        
        Private columnWFSoilSuctionHead As Global.System.Data.DataColumn
        
        Private columnHydraulicConductivity As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GreenAmptParameter"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GridValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGridValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USERSoilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERSoil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMTextureEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMTextureE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMTextureKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMTextureK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PorosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EffectivePorosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectivePorosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WFSoilSuctionHeadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWFSoilSuctionHead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HydraulicConductivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHydraulicConductivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GreenAmptParameterRow
            Get
                Return CType(Me.Rows(index),GreenAmptParameterRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GreenAmptParameterRowChanging As GreenAmptParameterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GreenAmptParameterRowChanged As GreenAmptParameterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GreenAmptParameterRowDeleting As GreenAmptParameterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GreenAmptParameterRowDeleted As GreenAmptParameterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGreenAmptParameterRow(ByVal row As GreenAmptParameterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGreenAmptParameterRow(ByVal GridValue As Integer, ByVal USERSoil As String, ByVal GRMCode As String, ByVal GRMTextureE As String, ByVal GRMTextureK As String, ByVal Porosity As Single, ByVal EffectivePorosity As Single, ByVal WFSoilSuctionHead As Single, ByVal HydraulicConductivity As Single) As GreenAmptParameterRow
            Dim rowGreenAmptParameterRow As GreenAmptParameterRow = CType(Me.NewRow,GreenAmptParameterRow)
            Dim columnValuesArray() As Object = New Object() {GridValue, USERSoil, GRMCode, GRMTextureE, GRMTextureK, Porosity, EffectivePorosity, WFSoilSuctionHead, HydraulicConductivity}
            rowGreenAmptParameterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGreenAmptParameterRow)
            Return rowGreenAmptParameterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GreenAmptParameterDataTable = CType(MyBase.Clone,GreenAmptParameterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GreenAmptParameterDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGridValue = MyBase.Columns("GridValue")
            Me.columnUSERSoil = MyBase.Columns("USERSoil")
            Me.columnGRMCode = MyBase.Columns("GRMCode")
            Me.columnGRMTextureE = MyBase.Columns("GRMTextureE")
            Me.columnGRMTextureK = MyBase.Columns("GRMTextureK")
            Me.columnPorosity = MyBase.Columns("Porosity")
            Me.columnEffectivePorosity = MyBase.Columns("EffectivePorosity")
            Me.columnWFSoilSuctionHead = MyBase.Columns("WFSoilSuctionHead")
            Me.columnHydraulicConductivity = MyBase.Columns("HydraulicConductivity")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGridValue = New Global.System.Data.DataColumn("GridValue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGridValue)
            Me.columnUSERSoil = New Global.System.Data.DataColumn("USERSoil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERSoil)
            Me.columnGRMCode = New Global.System.Data.DataColumn("GRMCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMCode)
            Me.columnGRMTextureE = New Global.System.Data.DataColumn("GRMTextureE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMTextureE)
            Me.columnGRMTextureK = New Global.System.Data.DataColumn("GRMTextureK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMTextureK)
            Me.columnPorosity = New Global.System.Data.DataColumn("Porosity", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorosity)
            Me.columnEffectivePorosity = New Global.System.Data.DataColumn("EffectivePorosity", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectivePorosity)
            Me.columnWFSoilSuctionHead = New Global.System.Data.DataColumn("WFSoilSuctionHead", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWFSoilSuctionHead)
            Me.columnHydraulicConductivity = New Global.System.Data.DataColumn("HydraulicConductivity", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHydraulicConductivity)
            Me.columnUSERSoil.MaxLength = 50
            Me.columnGRMCode.MaxLength = 50
            Me.columnGRMTextureE.MaxLength = 50
            Me.columnGRMTextureK.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGreenAmptParameterRow() As GreenAmptParameterRow
            Return CType(Me.NewRow,GreenAmptParameterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GreenAmptParameterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GreenAmptParameterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GreenAmptParameterRowChangedEvent) Is Nothing) Then
                RaiseEvent GreenAmptParameterRowChanged(Me, New GreenAmptParameterRowChangeEvent(CType(e.Row,GreenAmptParameterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GreenAmptParameterRowChangingEvent) Is Nothing) Then
                RaiseEvent GreenAmptParameterRowChanging(Me, New GreenAmptParameterRowChangeEvent(CType(e.Row,GreenAmptParameterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GreenAmptParameterRowDeletedEvent) Is Nothing) Then
                RaiseEvent GreenAmptParameterRowDeleted(Me, New GreenAmptParameterRowChangeEvent(CType(e.Row,GreenAmptParameterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GreenAmptParameterRowDeletingEvent) Is Nothing) Then
                RaiseEvent GreenAmptParameterRowDeleting(Me, New GreenAmptParameterRowChangeEvent(CType(e.Row,GreenAmptParameterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGreenAmptParameterRow(ByVal row As GreenAmptParameterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GreenAmptParameterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SoilDepthDataTable
        Inherits Global.System.Data.TypedTableBase(Of SoilDepthRow)
        
        Private columnGridValue As Global.System.Data.DataColumn
        
        Private columnUserDepthClass As Global.System.Data.DataColumn
        
        Private columnGRMCode As Global.System.Data.DataColumn
        
        Private columnSoilDepthClassE As Global.System.Data.DataColumn
        
        Private columnSoilDepthClassK As Global.System.Data.DataColumn
        
        Private columnSoilDepth As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SoilDepth"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GridValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGridValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UserDepthClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserDepthClass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilDepthClassEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilDepthClassE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilDepthClassKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilDepthClassK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SoilDepthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoilDepth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SoilDepthRow
            Get
                Return CType(Me.Rows(index),SoilDepthRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SoilDepthRowChanging As SoilDepthRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SoilDepthRowChanged As SoilDepthRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SoilDepthRowDeleting As SoilDepthRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SoilDepthRowDeleted As SoilDepthRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSoilDepthRow(ByVal row As SoilDepthRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSoilDepthRow(ByVal GridValue As Integer, ByVal UserDepthClass As String, ByVal GRMCode As String, ByVal SoilDepthClassE As String, ByVal SoilDepthClassK As String, ByVal SoilDepth As Single) As SoilDepthRow
            Dim rowSoilDepthRow As SoilDepthRow = CType(Me.NewRow,SoilDepthRow)
            Dim columnValuesArray() As Object = New Object() {GridValue, UserDepthClass, GRMCode, SoilDepthClassE, SoilDepthClassK, SoilDepth}
            rowSoilDepthRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSoilDepthRow)
            Return rowSoilDepthRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SoilDepthDataTable = CType(MyBase.Clone,SoilDepthDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SoilDepthDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGridValue = MyBase.Columns("GridValue")
            Me.columnUserDepthClass = MyBase.Columns("UserDepthClass")
            Me.columnGRMCode = MyBase.Columns("GRMCode")
            Me.columnSoilDepthClassE = MyBase.Columns("SoilDepthClassE")
            Me.columnSoilDepthClassK = MyBase.Columns("SoilDepthClassK")
            Me.columnSoilDepth = MyBase.Columns("SoilDepth")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGridValue = New Global.System.Data.DataColumn("GridValue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGridValue)
            Me.columnUserDepthClass = New Global.System.Data.DataColumn("UserDepthClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserDepthClass)
            Me.columnGRMCode = New Global.System.Data.DataColumn("GRMCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMCode)
            Me.columnSoilDepthClassE = New Global.System.Data.DataColumn("SoilDepthClassE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilDepthClassE)
            Me.columnSoilDepthClassK = New Global.System.Data.DataColumn("SoilDepthClassK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilDepthClassK)
            Me.columnSoilDepth = New Global.System.Data.DataColumn("SoilDepth", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoilDepth)
            Me.columnUserDepthClass.MaxLength = 50
            Me.columnGRMCode.MaxLength = 50
            Me.columnSoilDepthClassE.MaxLength = 50
            Me.columnSoilDepthClassK.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSoilDepthRow() As SoilDepthRow
            Return CType(Me.NewRow,SoilDepthRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SoilDepthRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SoilDepthRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SoilDepthRowChangedEvent) Is Nothing) Then
                RaiseEvent SoilDepthRowChanged(Me, New SoilDepthRowChangeEvent(CType(e.Row,SoilDepthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SoilDepthRowChangingEvent) Is Nothing) Then
                RaiseEvent SoilDepthRowChanging(Me, New SoilDepthRowChangeEvent(CType(e.Row,SoilDepthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SoilDepthRowDeletedEvent) Is Nothing) Then
                RaiseEvent SoilDepthRowDeleted(Me, New SoilDepthRowChangeEvent(CType(e.Row,SoilDepthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SoilDepthRowDeletingEvent) Is Nothing) Then
                RaiseEvent SoilDepthRowDeleting(Me, New SoilDepthRowChangeEvent(CType(e.Row,SoilDepthRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSoilDepthRow(ByVal row As SoilDepthRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SoilDepthDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LandCoverDataTable
        Inherits Global.System.Data.TypedTableBase(Of LandCoverRow)
        
        Private columnGridValue As Global.System.Data.DataColumn
        
        Private columnUserLandCover As Global.System.Data.DataColumn
        
        Private columnGRMCode As Global.System.Data.DataColumn
        
        Private columnGRMLandCoverE As Global.System.Data.DataColumn
        
        Private columnGRMLandCoverK As Global.System.Data.DataColumn
        
        Private columnRoughnessCoefficient As Global.System.Data.DataColumn
        
        Private columnImperviousRatio As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LandCover"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GridValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGridValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UserLandCoverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserLandCover
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMLandCoverEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMLandCoverE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GRMLandCoverKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRMLandCoverK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RoughnessCoefficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoughnessCoefficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ImperviousRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImperviousRatio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LandCoverRow
            Get
                Return CType(Me.Rows(index),LandCoverRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LandCoverRowChanging As LandCoverRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LandCoverRowChanged As LandCoverRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LandCoverRowDeleting As LandCoverRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event LandCoverRowDeleted As LandCoverRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddLandCoverRow(ByVal row As LandCoverRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddLandCoverRow(ByVal GridValue As Integer, ByVal UserLandCover As String, ByVal GRMCode As String, ByVal GRMLandCoverE As String, ByVal GRMLandCoverK As String, ByVal RoughnessCoefficient As Single, ByVal ImperviousRatio As Single) As LandCoverRow
            Dim rowLandCoverRow As LandCoverRow = CType(Me.NewRow,LandCoverRow)
            Dim columnValuesArray() As Object = New Object() {GridValue, UserLandCover, GRMCode, GRMLandCoverE, GRMLandCoverK, RoughnessCoefficient, ImperviousRatio}
            rowLandCoverRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLandCoverRow)
            Return rowLandCoverRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LandCoverDataTable = CType(MyBase.Clone,LandCoverDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LandCoverDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGridValue = MyBase.Columns("GridValue")
            Me.columnUserLandCover = MyBase.Columns("UserLandCover")
            Me.columnGRMCode = MyBase.Columns("GRMCode")
            Me.columnGRMLandCoverE = MyBase.Columns("GRMLandCoverE")
            Me.columnGRMLandCoverK = MyBase.Columns("GRMLandCoverK")
            Me.columnRoughnessCoefficient = MyBase.Columns("RoughnessCoefficient")
            Me.columnImperviousRatio = MyBase.Columns("ImperviousRatio")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGridValue = New Global.System.Data.DataColumn("GridValue", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGridValue)
            Me.columnUserLandCover = New Global.System.Data.DataColumn("UserLandCover", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserLandCover)
            Me.columnGRMCode = New Global.System.Data.DataColumn("GRMCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMCode)
            Me.columnGRMLandCoverE = New Global.System.Data.DataColumn("GRMLandCoverE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMLandCoverE)
            Me.columnGRMLandCoverK = New Global.System.Data.DataColumn("GRMLandCoverK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRMLandCoverK)
            Me.columnRoughnessCoefficient = New Global.System.Data.DataColumn("RoughnessCoefficient", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoughnessCoefficient)
            Me.columnImperviousRatio = New Global.System.Data.DataColumn("ImperviousRatio", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImperviousRatio)
            Me.columnUserLandCover.MaxLength = 50
            Me.columnGRMCode.MaxLength = 50
            Me.columnGRMLandCoverE.MaxLength = 50
            Me.columnGRMLandCoverK.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewLandCoverRow() As LandCoverRow
            Return CType(Me.NewRow,LandCoverRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LandCoverRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LandCoverRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LandCoverRowChangedEvent) Is Nothing) Then
                RaiseEvent LandCoverRowChanged(Me, New LandCoverRowChangeEvent(CType(e.Row,LandCoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LandCoverRowChangingEvent) Is Nothing) Then
                RaiseEvent LandCoverRowChanging(Me, New LandCoverRowChangeEvent(CType(e.Row,LandCoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LandCoverRowDeletedEvent) Is Nothing) Then
                RaiseEvent LandCoverRowDeleted(Me, New LandCoverRowChangeEvent(CType(e.Row,LandCoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LandCoverRowDeletingEvent) Is Nothing) Then
                RaiseEvent LandCoverRowDeleting(Me, New LandCoverRowChangeEvent(CType(e.Row,LandCoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveLandCoverRow(ByVal row As LandCoverRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LandCoverDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FlowControlGridDataTable
        Inherits Global.System.Data.TypedTableBase(Of FlowControlGridRow)
        
        Private columnCVID As Global.System.Data.DataColumn
        
        Private columnColX As Global.System.Data.DataColumn
        
        Private columnRowY As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnControlType As Global.System.Data.DataColumn
        
        Private columnDT As Global.System.Data.DataColumn
        
        Private columnFlowDataFile As Global.System.Data.DataColumn
        
        Private columnIniStorage As Global.System.Data.DataColumn
        
        Private columnMaxStorage As Global.System.Data.DataColumn
        
        Private columnMaxStorageR As Global.System.Data.DataColumn
        
        Private columnROType As Global.System.Data.DataColumn
        
        Private columnROConstQ As Global.System.Data.DataColumn
        
        Private columnROConstQDuration As Global.System.Data.DataColumn
        
        Private columnROSDEqA As Global.System.Data.DataColumn
        
        Private columnROSDEqB As Global.System.Data.DataColumn
        
        Private columnROSDEqC As Global.System.Data.DataColumn
        
        Private columnROSDEqD As Global.System.Data.DataColumn
        
        Private columnROSDEqE As Global.System.Data.DataColumn
        
        Private columnROSDEqF As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FlowControlGrid"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CVIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCVID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ColXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RowYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ControlTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnControlType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FlowDataFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlowDataFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IniStorageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIniStorage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxStorageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxStorage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxStorageRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxStorageR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROConstQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROConstQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROConstQDurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROConstQDuration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROSDEqAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROSDEqA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROSDEqBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROSDEqB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROSDEqCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROSDEqC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROSDEqDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROSDEqD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROSDEqEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROSDEqE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ROSDEqFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROSDEqF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FlowControlGridRow
            Get
                Return CType(Me.Rows(index),FlowControlGridRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FlowControlGridRowChanging As FlowControlGridRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FlowControlGridRowChanged As FlowControlGridRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FlowControlGridRowDeleting As FlowControlGridRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FlowControlGridRowDeleted As FlowControlGridRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddFlowControlGridRow(ByVal row As FlowControlGridRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddFlowControlGridRow( _
                    ByVal CVID As Integer,  _
                    ByVal ColX As Integer,  _
                    ByVal RowY As Integer,  _
                    ByVal Name As String,  _
                    ByVal ControlType As String,  _
                    ByVal DT As String,  _
                    ByVal FlowDataFile As String,  _
                    ByVal IniStorage As String,  _
                    ByVal MaxStorage As String,  _
                    ByVal MaxStorageR As String,  _
                    ByVal ROType As String,  _
                    ByVal ROConstQ As String,  _
                    ByVal ROConstQDuration As String,  _
                    ByVal ROSDEqA As Single,  _
                    ByVal ROSDEqB As Single,  _
                    ByVal ROSDEqC As Single,  _
                    ByVal ROSDEqD As Single,  _
                    ByVal ROSDEqE As Single,  _
                    ByVal ROSDEqF As Single) As FlowControlGridRow
            Dim rowFlowControlGridRow As FlowControlGridRow = CType(Me.NewRow,FlowControlGridRow)
            Dim columnValuesArray() As Object = New Object() {CVID, ColX, RowY, Name, ControlType, DT, FlowDataFile, IniStorage, MaxStorage, MaxStorageR, ROType, ROConstQ, ROConstQDuration, ROSDEqA, ROSDEqB, ROSDEqC, ROSDEqD, ROSDEqE, ROSDEqF}
            rowFlowControlGridRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFlowControlGridRow)
            Return rowFlowControlGridRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FlowControlGridDataTable = CType(MyBase.Clone,FlowControlGridDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FlowControlGridDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCVID = MyBase.Columns("CVID")
            Me.columnColX = MyBase.Columns("ColX")
            Me.columnRowY = MyBase.Columns("RowY")
            Me.columnName = MyBase.Columns("Name")
            Me.columnControlType = MyBase.Columns("ControlType")
            Me.columnDT = MyBase.Columns("DT")
            Me.columnFlowDataFile = MyBase.Columns("FlowDataFile")
            Me.columnIniStorage = MyBase.Columns("IniStorage")
            Me.columnMaxStorage = MyBase.Columns("MaxStorage")
            Me.columnMaxStorageR = MyBase.Columns("MaxStorageR")
            Me.columnROType = MyBase.Columns("ROType")
            Me.columnROConstQ = MyBase.Columns("ROConstQ")
            Me.columnROConstQDuration = MyBase.Columns("ROConstQDuration")
            Me.columnROSDEqA = MyBase.Columns("ROSDEqA")
            Me.columnROSDEqB = MyBase.Columns("ROSDEqB")
            Me.columnROSDEqC = MyBase.Columns("ROSDEqC")
            Me.columnROSDEqD = MyBase.Columns("ROSDEqD")
            Me.columnROSDEqE = MyBase.Columns("ROSDEqE")
            Me.columnROSDEqF = MyBase.Columns("ROSDEqF")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCVID = New Global.System.Data.DataColumn("CVID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCVID)
            Me.columnColX = New Global.System.Data.DataColumn("ColX", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColX)
            Me.columnRowY = New Global.System.Data.DataColumn("RowY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowY)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnControlType = New Global.System.Data.DataColumn("ControlType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnControlType)
            Me.columnDT = New Global.System.Data.DataColumn("DT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDT)
            Me.columnFlowDataFile = New Global.System.Data.DataColumn("FlowDataFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlowDataFile)
            Me.columnIniStorage = New Global.System.Data.DataColumn("IniStorage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIniStorage)
            Me.columnMaxStorage = New Global.System.Data.DataColumn("MaxStorage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxStorage)
            Me.columnMaxStorageR = New Global.System.Data.DataColumn("MaxStorageR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxStorageR)
            Me.columnROType = New Global.System.Data.DataColumn("ROType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROType)
            Me.columnROConstQ = New Global.System.Data.DataColumn("ROConstQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROConstQ)
            Me.columnROConstQDuration = New Global.System.Data.DataColumn("ROConstQDuration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROConstQDuration)
            Me.columnROSDEqA = New Global.System.Data.DataColumn("ROSDEqA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROSDEqA)
            Me.columnROSDEqB = New Global.System.Data.DataColumn("ROSDEqB", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROSDEqB)
            Me.columnROSDEqC = New Global.System.Data.DataColumn("ROSDEqC", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROSDEqC)
            Me.columnROSDEqD = New Global.System.Data.DataColumn("ROSDEqD", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROSDEqD)
            Me.columnROSDEqE = New Global.System.Data.DataColumn("ROSDEqE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROSDEqE)
            Me.columnROSDEqF = New Global.System.Data.DataColumn("ROSDEqF", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROSDEqF)
            Me.columnName.MaxLength = 50
            Me.columnControlType.MaxLength = 50
            Me.columnFlowDataFile.MaxLength = 536870910
            Me.columnROType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewFlowControlGridRow() As FlowControlGridRow
            Return CType(Me.NewRow,FlowControlGridRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FlowControlGridRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FlowControlGridRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FlowControlGridRowChangedEvent) Is Nothing) Then
                RaiseEvent FlowControlGridRowChanged(Me, New FlowControlGridRowChangeEvent(CType(e.Row,FlowControlGridRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FlowControlGridRowChangingEvent) Is Nothing) Then
                RaiseEvent FlowControlGridRowChanging(Me, New FlowControlGridRowChangeEvent(CType(e.Row,FlowControlGridRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FlowControlGridRowDeletedEvent) Is Nothing) Then
                RaiseEvent FlowControlGridRowDeleted(Me, New FlowControlGridRowChangeEvent(CType(e.Row,FlowControlGridRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FlowControlGridRowDeletingEvent) Is Nothing) Then
                RaiseEvent FlowControlGridRowDeleting(Me, New FlowControlGridRowChangeEvent(CType(e.Row,FlowControlGridRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveFlowControlGridRow(ByVal row As FlowControlGridRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As GRMProject = New GRMProject()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FlowControlGridDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ProjectSettingsRow
        Inherits Global.System.Data.DataRow
        
        Private tableProjectSettings As ProjectSettingsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableProjectSettings = CType(Me.Table,ProjectSettingsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectFile() As String
            Get
                Return CType(Me(Me.tableProjectSettings.ProjectFileColumn),String)
            End Get
            Set
                Me(Me.tableProjectSettings.ProjectFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMSimulationType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.GRMSimulationTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'GRMSimulationType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.GRMSimulationTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WatershedFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.WatershedFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'WatershedFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.WatershedFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SlopeFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SlopeFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SlopeFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SlopeFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FlowDirectionFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.FlowDirectionFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'FlowDirectionFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.FlowDirectionFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FlowAccumFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.FlowAccumFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'FlowAccumFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.FlowAccumFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StreamFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.StreamFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'StreamFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.StreamFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChannelWidthFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ChannelWidthFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ChannelWidthFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ChannelWidthFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LandCoverDataType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.LandCoverDataTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'LandCoverDataType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.LandCoverDataTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LandCoverFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.LandCoverFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'LandCoverFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.LandCoverFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LandCoverVATFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.LandCoverVATFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'LandCoverVATFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.LandCoverVATFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantRoughnessCoeff() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantRoughnessCoeffColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantRoughnessCoeff' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantRoughnessCoeffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantImperviousRatio() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantImperviousRatioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantImperviousRatio' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantImperviousRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilTextureDataType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SoilTextureDataTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SoilTextureDataType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SoilTextureDataTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilTextureFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SoilTextureFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SoilTextureFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SoilTextureFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilTextureVATFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SoilTextureVATFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SoilTextureVATFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SoilTextureVATFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantSoilPorosity() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantSoilPorosityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantSoilPorosity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantSoilPorosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantSoilEffPorosity() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantSoilEffPorosityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantSoilEffPorosity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantSoilEffPorosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantSoilWettingFrontSuctionHead() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantSoilWettingFrontSuctionHead' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantSoilHydraulicConductivity() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantSoilHydraulicConductivityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantSoilHydraulicConductivity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantSoilHydraulicConductivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilDepthDataType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SoilDepthDataTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SoilDepthDataType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SoilDepthDataTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilDepthFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SoilDepthFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SoilDepthFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SoilDepthFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilDepthVATFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SoilDepthVATFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SoilDepthVATFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SoilDepthVATFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConstantSoilDepth() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ConstantSoilDepthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ConstantSoilDepth' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ConstantSoilDepthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InitialSoilSaturationRatioFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.InitialSoilSaturationRatioFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'InitialSoilSaturationRatioFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.InitialSoilSaturationRatioFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InitialChannelFlowFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.InitialChannelFlowFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'InitialChannelFlowFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.InitialChannelFlowFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RainfallDataType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.RainfallDataTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'RainfallDataType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.RainfallDataTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RainfallInterval() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.RainfallIntervalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'RainfallInterval' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.RainfallIntervalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RainfallDataFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.RainfallDataFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'RainfallDataFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.RainfallDataFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FlowDirectionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.FlowDirectionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'FlowDirectionType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.FlowDirectionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GridCellSize() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.GridCellSizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'GridCellSize' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.GridCellSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IsParallel() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.IsParallelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'IsParallel' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.IsParallelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxDegreeOfParallelism() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MaxDegreeOfParallelismColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MaxDegreeOfParallelism' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MaxDegreeOfParallelismColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SimulStartingTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SimulStartingTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SimulStartingTime' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SimulStartingTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SimulationDuration() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SimulationDurationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SimulationDuration' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SimulationDurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComputationalTimeStep() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ComputationalTimeStepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ComputationalTimeStep' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ComputationalTimeStepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IsFixedTimeStep() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.IsFixedTimeStepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'IsFixedTimeStep' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.IsFixedTimeStepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OutputTimeStep() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.OutputTimeStepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'OutputTimeStep' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.OutputTimeStepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CrossSectionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.CrossSectionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'CrossSectionType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.CrossSectionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SingleCSChannelWidthType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SingleCSChannelWidthTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SingleCSChannelWidthType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SingleCSChannelWidthTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChannelWidthEQc() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ChannelWidthEQcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ChannelWidthEQc' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ChannelWidthEQcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChannelWidthEQd() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ChannelWidthEQdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ChannelWidthEQd' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ChannelWidthEQdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChannelWidthEQe() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ChannelWidthEQeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ChannelWidthEQe' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ChannelWidthEQeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChannelWidthMostDownStream() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ChannelWidthMostDownStreamColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ChannelWidthMostDownStream' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ChannelWidthMostDownStreamColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LowerRegionHeight() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.LowerRegionHeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'LowerRegionHeight' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.LowerRegionHeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LowerRegionBaseWidth() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.LowerRegionBaseWidthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'LowerRegionBaseWidth' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.LowerRegionBaseWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpperRegionBaseWidth() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.UpperRegionBaseWidthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'UpperRegionBaseWidth' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.UpperRegionBaseWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompoundCSChannelWidthLimit() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.CompoundCSChannelWidthLimitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'CompoundCSChannelWidthLimit' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.CompoundCSChannelWidthLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BankSideSlopeRight() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.BankSideSlopeRightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'BankSideSlopeRight' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.BankSideSlopeRightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BankSideSlopeLeft() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.BankSideSlopeLeftColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'BankSideSlopeLeft' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.BankSideSlopeLeftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SimulateInfiltration() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SimulateInfiltrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SimulateInfiltration' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SimulateInfiltrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SimulateSubsurfaceFlow() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SimulateSubsurfaceFlowColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SimulateSubsurfaceFlow' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SimulateSubsurfaceFlowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SimulateBaseFlow() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SimulateBaseFlowColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SimulateBaseFlow' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SimulateBaseFlowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SimulateFlowControl() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.SimulateFlowControlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'SimulateFlowControl' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.SimulateFlowControlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MakeIMGFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MakeIMGFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MakeIMGFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MakeIMGFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MakeASCFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MakeASCFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MakeASCFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MakeASCFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MakeSoilSaturationDistFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MakeSoilSaturationDistFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MakeSoilSaturationDistFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MakeSoilSaturationDistFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MakeRfDistFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MakeRfDistFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MakeRfDistFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MakeRfDistFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MakeRFaccDistFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MakeRFaccDistFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MakeRFaccDistFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MakeRFaccDistFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MakeFlowDistFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.MakeFlowDistFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'MakeFlowDistFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.MakeFlowDistFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PrintOption() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.PrintOptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'PrintOption' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.PrintOptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WriteLog() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.WriteLogColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'WriteLog' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.WriteLogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AboutThisProject() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.AboutThisProjectColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'AboutThisProject' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.AboutThisProjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AboutWatershed() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.AboutWatershedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'AboutWatershed' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.AboutWatershedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AboutLandCoverMap() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.AboutLandCoverMapColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'AboutLandCoverMap' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.AboutLandCoverMapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AboutSoilMap() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.AboutSoilMapColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'AboutSoilMap' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.AboutSoilMapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AboutSoilDepthMap() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.AboutSoilDepthMapColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'AboutSoilDepthMap' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.AboutSoilDepthMapColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AboutRainfall() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.AboutRainfallColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'AboutRainfall' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.AboutRainfallColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectSavedTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ProjectSavedTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ProjectSavedTime' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ProjectSavedTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComputerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ComputerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ComputerName' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ComputerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComputerUserName() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.ComputerUserNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'ComputerUserName' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.ComputerUserNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMVersion() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectSettings.GRMVersionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'ProjectSettings' 테이블의 'GRMVersion' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectSettings.GRMVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMSimulationTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.GRMSimulationTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMSimulationTypeNull()
            Me(Me.tableProjectSettings.GRMSimulationTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWatershedFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.WatershedFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWatershedFileNull()
            Me(Me.tableProjectSettings.WatershedFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSlopeFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SlopeFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSlopeFileNull()
            Me(Me.tableProjectSettings.SlopeFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFlowDirectionFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.FlowDirectionFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFlowDirectionFileNull()
            Me(Me.tableProjectSettings.FlowDirectionFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFlowAccumFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.FlowAccumFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFlowAccumFileNull()
            Me(Me.tableProjectSettings.FlowAccumFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStreamFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.StreamFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStreamFileNull()
            Me(Me.tableProjectSettings.StreamFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChannelWidthFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ChannelWidthFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChannelWidthFileNull()
            Me(Me.tableProjectSettings.ChannelWidthFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLandCoverDataTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.LandCoverDataTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLandCoverDataTypeNull()
            Me(Me.tableProjectSettings.LandCoverDataTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLandCoverFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.LandCoverFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLandCoverFileNull()
            Me(Me.tableProjectSettings.LandCoverFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLandCoverVATFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.LandCoverVATFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLandCoverVATFileNull()
            Me(Me.tableProjectSettings.LandCoverVATFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantRoughnessCoeffNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantRoughnessCoeffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantRoughnessCoeffNull()
            Me(Me.tableProjectSettings.ConstantRoughnessCoeffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantImperviousRatioNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantImperviousRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantImperviousRatioNull()
            Me(Me.tableProjectSettings.ConstantImperviousRatioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilTextureDataTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SoilTextureDataTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilTextureDataTypeNull()
            Me(Me.tableProjectSettings.SoilTextureDataTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilTextureFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SoilTextureFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilTextureFileNull()
            Me(Me.tableProjectSettings.SoilTextureFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilTextureVATFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SoilTextureVATFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilTextureVATFileNull()
            Me(Me.tableProjectSettings.SoilTextureVATFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantSoilPorosityNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantSoilPorosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantSoilPorosityNull()
            Me(Me.tableProjectSettings.ConstantSoilPorosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantSoilEffPorosityNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantSoilEffPorosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantSoilEffPorosityNull()
            Me(Me.tableProjectSettings.ConstantSoilEffPorosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantSoilWettingFrontSuctionHeadNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantSoilWettingFrontSuctionHeadNull()
            Me(Me.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantSoilHydraulicConductivityNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantSoilHydraulicConductivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantSoilHydraulicConductivityNull()
            Me(Me.tableProjectSettings.ConstantSoilHydraulicConductivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilDepthDataTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SoilDepthDataTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilDepthDataTypeNull()
            Me(Me.tableProjectSettings.SoilDepthDataTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilDepthFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SoilDepthFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilDepthFileNull()
            Me(Me.tableProjectSettings.SoilDepthFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilDepthVATFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SoilDepthVATFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilDepthVATFileNull()
            Me(Me.tableProjectSettings.SoilDepthVATFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConstantSoilDepthNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ConstantSoilDepthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConstantSoilDepthNull()
            Me(Me.tableProjectSettings.ConstantSoilDepthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInitialSoilSaturationRatioFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.InitialSoilSaturationRatioFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInitialSoilSaturationRatioFileNull()
            Me(Me.tableProjectSettings.InitialSoilSaturationRatioFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInitialChannelFlowFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.InitialChannelFlowFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInitialChannelFlowFileNull()
            Me(Me.tableProjectSettings.InitialChannelFlowFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRainfallDataTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.RainfallDataTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRainfallDataTypeNull()
            Me(Me.tableProjectSettings.RainfallDataTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRainfallIntervalNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.RainfallIntervalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRainfallIntervalNull()
            Me(Me.tableProjectSettings.RainfallIntervalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRainfallDataFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.RainfallDataFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRainfallDataFileNull()
            Me(Me.tableProjectSettings.RainfallDataFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFlowDirectionTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.FlowDirectionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFlowDirectionTypeNull()
            Me(Me.tableProjectSettings.FlowDirectionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGridCellSizeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.GridCellSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGridCellSizeNull()
            Me(Me.tableProjectSettings.GridCellSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIsParallelNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.IsParallelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIsParallelNull()
            Me(Me.tableProjectSettings.IsParallelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxDegreeOfParallelismNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MaxDegreeOfParallelismColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxDegreeOfParallelismNull()
            Me(Me.tableProjectSettings.MaxDegreeOfParallelismColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSimulStartingTimeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SimulStartingTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSimulStartingTimeNull()
            Me(Me.tableProjectSettings.SimulStartingTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSimulationDurationNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SimulationDurationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSimulationDurationNull()
            Me(Me.tableProjectSettings.SimulationDurationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComputationalTimeStepNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ComputationalTimeStepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComputationalTimeStepNull()
            Me(Me.tableProjectSettings.ComputationalTimeStepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIsFixedTimeStepNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.IsFixedTimeStepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIsFixedTimeStepNull()
            Me(Me.tableProjectSettings.IsFixedTimeStepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOutputTimeStepNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.OutputTimeStepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOutputTimeStepNull()
            Me(Me.tableProjectSettings.OutputTimeStepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCrossSectionTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.CrossSectionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCrossSectionTypeNull()
            Me(Me.tableProjectSettings.CrossSectionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSingleCSChannelWidthTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SingleCSChannelWidthTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSingleCSChannelWidthTypeNull()
            Me(Me.tableProjectSettings.SingleCSChannelWidthTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChannelWidthEQcNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ChannelWidthEQcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChannelWidthEQcNull()
            Me(Me.tableProjectSettings.ChannelWidthEQcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChannelWidthEQdNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ChannelWidthEQdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChannelWidthEQdNull()
            Me(Me.tableProjectSettings.ChannelWidthEQdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChannelWidthEQeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ChannelWidthEQeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChannelWidthEQeNull()
            Me(Me.tableProjectSettings.ChannelWidthEQeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChannelWidthMostDownStreamNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ChannelWidthMostDownStreamColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChannelWidthMostDownStreamNull()
            Me(Me.tableProjectSettings.ChannelWidthMostDownStreamColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLowerRegionHeightNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.LowerRegionHeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLowerRegionHeightNull()
            Me(Me.tableProjectSettings.LowerRegionHeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLowerRegionBaseWidthNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.LowerRegionBaseWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLowerRegionBaseWidthNull()
            Me(Me.tableProjectSettings.LowerRegionBaseWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUpperRegionBaseWidthNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.UpperRegionBaseWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUpperRegionBaseWidthNull()
            Me(Me.tableProjectSettings.UpperRegionBaseWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompoundCSChannelWidthLimitNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.CompoundCSChannelWidthLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompoundCSChannelWidthLimitNull()
            Me(Me.tableProjectSettings.CompoundCSChannelWidthLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBankSideSlopeRightNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.BankSideSlopeRightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBankSideSlopeRightNull()
            Me(Me.tableProjectSettings.BankSideSlopeRightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBankSideSlopeLeftNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.BankSideSlopeLeftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBankSideSlopeLeftNull()
            Me(Me.tableProjectSettings.BankSideSlopeLeftColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSimulateInfiltrationNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SimulateInfiltrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSimulateInfiltrationNull()
            Me(Me.tableProjectSettings.SimulateInfiltrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSimulateSubsurfaceFlowNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SimulateSubsurfaceFlowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSimulateSubsurfaceFlowNull()
            Me(Me.tableProjectSettings.SimulateSubsurfaceFlowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSimulateBaseFlowNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SimulateBaseFlowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSimulateBaseFlowNull()
            Me(Me.tableProjectSettings.SimulateBaseFlowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSimulateFlowControlNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.SimulateFlowControlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSimulateFlowControlNull()
            Me(Me.tableProjectSettings.SimulateFlowControlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMakeIMGFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MakeIMGFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMakeIMGFileNull()
            Me(Me.tableProjectSettings.MakeIMGFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMakeASCFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MakeASCFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMakeASCFileNull()
            Me(Me.tableProjectSettings.MakeASCFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMakeSoilSaturationDistFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MakeSoilSaturationDistFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMakeSoilSaturationDistFileNull()
            Me(Me.tableProjectSettings.MakeSoilSaturationDistFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMakeRfDistFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MakeRfDistFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMakeRfDistFileNull()
            Me(Me.tableProjectSettings.MakeRfDistFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMakeRFaccDistFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MakeRFaccDistFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMakeRFaccDistFileNull()
            Me(Me.tableProjectSettings.MakeRFaccDistFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMakeFlowDistFileNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.MakeFlowDistFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMakeFlowDistFileNull()
            Me(Me.tableProjectSettings.MakeFlowDistFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPrintOptionNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.PrintOptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPrintOptionNull()
            Me(Me.tableProjectSettings.PrintOptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWriteLogNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.WriteLogColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWriteLogNull()
            Me(Me.tableProjectSettings.WriteLogColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAboutThisProjectNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.AboutThisProjectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAboutThisProjectNull()
            Me(Me.tableProjectSettings.AboutThisProjectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAboutWatershedNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.AboutWatershedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAboutWatershedNull()
            Me(Me.tableProjectSettings.AboutWatershedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAboutLandCoverMapNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.AboutLandCoverMapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAboutLandCoverMapNull()
            Me(Me.tableProjectSettings.AboutLandCoverMapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAboutSoilMapNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.AboutSoilMapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAboutSoilMapNull()
            Me(Me.tableProjectSettings.AboutSoilMapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAboutSoilDepthMapNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.AboutSoilDepthMapColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAboutSoilDepthMapNull()
            Me(Me.tableProjectSettings.AboutSoilDepthMapColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAboutRainfallNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.AboutRainfallColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAboutRainfallNull()
            Me(Me.tableProjectSettings.AboutRainfallColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectSavedTimeNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ProjectSavedTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectSavedTimeNull()
            Me(Me.tableProjectSettings.ProjectSavedTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComputerNameNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ComputerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComputerNameNull()
            Me(Me.tableProjectSettings.ComputerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComputerUserNameNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.ComputerUserNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComputerUserNameNull()
            Me(Me.tableProjectSettings.ComputerUserNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMVersionNull() As Boolean
            Return Me.IsNull(Me.tableProjectSettings.GRMVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMVersionNull()
            Me(Me.tableProjectSettings.GRMVersionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SubWatershedSettingsRow
        Inherits Global.System.Data.DataRow
        
        Private tableSubWatershedSettings As SubWatershedSettingsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSubWatershedSettings = CType(Me.Table,SubWatershedSettingsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'ID' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IniSaturation() As Single
            Get
                Return CType(Me(Me.tableSubWatershedSettings.IniSaturationColumn),Single)
            End Get
            Set
                Me(Me.tableSubWatershedSettings.IniSaturationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MinSlopeOF() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.MinSlopeOFColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'MinSlopeOF' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.MinSlopeOFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MinSlopeChBed() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.MinSlopeChBedColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'MinSlopeChBed' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.MinSlopeChBedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MinChBaseWidth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.MinChBaseWidthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'MinChBaseWidth' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.MinChBaseWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChRoughness() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.ChRoughnessColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'ChRoughness' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.ChRoughnessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DryStreamOrder() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.DryStreamOrderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'DryStreamOrder' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.DryStreamOrderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IniFlow() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.IniFlowColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'IniFlow' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.IniFlowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CalCoefLCRoughness() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.CalCoefLCRoughnessColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'CalCoefLCRoughness' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.CalCoefLCRoughnessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CalCoefPorosity() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.CalCoefPorosityColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'CalCoefPorosity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.CalCoefPorosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CalCoefWFSuctionHead() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'CalCoefWFSuctionHead' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CalCoefHydraulicK() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.CalCoefHydraulicKColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'CalCoefHydraulicK' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.CalCoefHydraulicKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CalCoefSoilDepth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.CalCoefSoilDepthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'CalCoefSoilDepth' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.CalCoefSoilDepthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PowerCeofUnSaturatedK() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.PowerCeofUnSaturatedKColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'PowerCeofUnSaturatedK' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.PowerCeofUnSaturatedKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UserSet() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSubWatershedSettings.UserSetColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SubWatershedSettings' 테이블의 'UserSet' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSubWatershedSettings.UserSetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableSubWatershedSettings.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMinSlopeOFNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.MinSlopeOFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMinSlopeOFNull()
            Me(Me.tableSubWatershedSettings.MinSlopeOFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMinSlopeChBedNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.MinSlopeChBedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMinSlopeChBedNull()
            Me(Me.tableSubWatershedSettings.MinSlopeChBedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMinChBaseWidthNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.MinChBaseWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMinChBaseWidthNull()
            Me(Me.tableSubWatershedSettings.MinChBaseWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChRoughnessNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.ChRoughnessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChRoughnessNull()
            Me(Me.tableSubWatershedSettings.ChRoughnessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDryStreamOrderNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.DryStreamOrderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDryStreamOrderNull()
            Me(Me.tableSubWatershedSettings.DryStreamOrderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIniFlowNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.IniFlowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIniFlowNull()
            Me(Me.tableSubWatershedSettings.IniFlowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCalCoefLCRoughnessNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.CalCoefLCRoughnessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCalCoefLCRoughnessNull()
            Me(Me.tableSubWatershedSettings.CalCoefLCRoughnessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCalCoefPorosityNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.CalCoefPorosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCalCoefPorosityNull()
            Me(Me.tableSubWatershedSettings.CalCoefPorosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCalCoefWFSuctionHeadNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCalCoefWFSuctionHeadNull()
            Me(Me.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCalCoefHydraulicKNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.CalCoefHydraulicKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCalCoefHydraulicKNull()
            Me(Me.tableSubWatershedSettings.CalCoefHydraulicKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCalCoefSoilDepthNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.CalCoefSoilDepthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCalCoefSoilDepthNull()
            Me(Me.tableSubWatershedSettings.CalCoefSoilDepthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPowerCeofUnSaturatedKNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.PowerCeofUnSaturatedKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPowerCeofUnSaturatedKNull()
            Me(Me.tableSubWatershedSettings.PowerCeofUnSaturatedKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUserSetNull() As Boolean
            Return Me.IsNull(Me.tableSubWatershedSettings.UserSetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUserSetNull()
            Me(Me.tableSubWatershedSettings.UserSetColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RTenvRow
        Inherits Global.System.Data.DataRow
        
        Private tableRTenv As RTenvDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRTenv = CType(Me.Table,RTenvDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectFPN() As String
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.ProjectFPNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'ProjectFPN' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.ProjectFPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RTRFfolderName() As String
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.RTRFfolderNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'RTRFfolderName' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.RTRFfolderNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RTFCdataFPN() As String
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.RTFCdataFPNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'RTFCdataFPN' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.RTFCdataFPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IsFC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.IsFCColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'IsFC' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.IsFCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IsDWSSexist() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.IsDWSSexistColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'IsDWSSexist' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.IsDWSSexistColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CWSSCVIDtoConnectWithDWSS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.CWSSCVIDtoConnectWithDWSSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'CWSSCVIDtoConnectWithDWSS' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.CWSSCVIDtoConnectWithDWSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DWSSCVIDtoConnectWithUWSS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.DWSSCVIDtoConnectWithUWSSColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'DWSSCVIDtoConnectWithUWSS' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.DWSSCVIDtoConnectWithUWSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FPNDWSSFCdata() As String
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.FPNDWSSFCdataColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'FPNDWSSFCdata' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.FPNDWSSFCdataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RFInterval_min() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.RFInterval_minColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'RFInterval_min' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.RFInterval_minColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OutputInterval_min() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.OutputInterval_minColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'OutputInterval_min' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.OutputInterval_minColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RTstartingTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableRTenv.RTstartingTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'RTenv' 테이블의 'RTstartingTime' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableRTenv.RTstartingTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectFPNNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.ProjectFPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectFPNNull()
            Me(Me.tableRTenv.ProjectFPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRTRFfolderNameNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.RTRFfolderNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRTRFfolderNameNull()
            Me(Me.tableRTenv.RTRFfolderNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRTFCdataFPNNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.RTFCdataFPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRTFCdataFPNNull()
            Me(Me.tableRTenv.RTFCdataFPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIsFCNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.IsFCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIsFCNull()
            Me(Me.tableRTenv.IsFCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIsDWSSexistNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.IsDWSSexistColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIsDWSSexistNull()
            Me(Me.tableRTenv.IsDWSSexistColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCWSSCVIDtoConnectWithDWSSNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.CWSSCVIDtoConnectWithDWSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCWSSCVIDtoConnectWithDWSSNull()
            Me(Me.tableRTenv.CWSSCVIDtoConnectWithDWSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDWSSCVIDtoConnectWithUWSSNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.DWSSCVIDtoConnectWithUWSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDWSSCVIDtoConnectWithUWSSNull()
            Me(Me.tableRTenv.DWSSCVIDtoConnectWithUWSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFPNDWSSFCdataNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.FPNDWSSFCdataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFPNDWSSFCdataNull()
            Me(Me.tableRTenv.FPNDWSSFCdataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRFInterval_minNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.RFInterval_minColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRFInterval_minNull()
            Me(Me.tableRTenv.RFInterval_minColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOutputInterval_minNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.OutputInterval_minColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOutputInterval_minNull()
            Me(Me.tableRTenv.OutputInterval_minColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRTstartingTimeNull() As Boolean
            Return Me.IsNull(Me.tableRTenv.RTstartingTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRTstartingTimeNull()
            Me(Me.tableRTenv.RTstartingTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WatchPointsRow
        Inherits Global.System.Data.DataRow
        
        Private tableWatchPoints As WatchPointsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWatchPoints = CType(Me.Table,WatchPointsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CVID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWatchPoints.CVIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'WatchPoints' 테이블의 'CVID' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableWatchPoints.CVIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableWatchPoints.NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'WatchPoints' 테이블의 'Name' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableWatchPoints.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ColX() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWatchPoints.ColXColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'WatchPoints' 테이블의 'ColX' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableWatchPoints.ColXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RowY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWatchPoints.RowYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'WatchPoints' 테이블의 'RowY' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableWatchPoints.RowYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCVIDNull() As Boolean
            Return Me.IsNull(Me.tableWatchPoints.CVIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCVIDNull()
            Me(Me.tableWatchPoints.CVIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableWatchPoints.NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNameNull()
            Me(Me.tableWatchPoints.NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsColXNull() As Boolean
            Return Me.IsNull(Me.tableWatchPoints.ColXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetColXNull()
            Me(Me.tableWatchPoints.ColXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRowYNull() As Boolean
            Return Me.IsNull(Me.tableWatchPoints.RowYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRowYNull()
            Me(Me.tableWatchPoints.RowYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GreenAmptParameterRow
        Inherits Global.System.Data.DataRow
        
        Private tableGreenAmptParameter As GreenAmptParameterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGreenAmptParameter = CType(Me.Table,GreenAmptParameterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GridValue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.GridValueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'GridValue' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.GridValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USERSoil() As String
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.USERSoilColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'USERSoil' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.USERSoilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.GRMCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'GRMCode' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.GRMCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMTextureE() As String
            Get
                If Me.IsGRMTextureENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableGreenAmptParameter.GRMTextureEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableGreenAmptParameter.GRMTextureEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMTextureK() As String
            Get
                If Me.IsGRMTextureKNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableGreenAmptParameter.GRMTextureKColumn),String)
                End If
            End Get
            Set
                Me(Me.tableGreenAmptParameter.GRMTextureKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Porosity() As Single
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.PorosityColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'Porosity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.PorosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EffectivePorosity() As Single
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.EffectivePorosityColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'EffectivePorosity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.EffectivePorosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WFSoilSuctionHead() As Single
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.WFSoilSuctionHeadColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'WFSoilSuctionHead' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.WFSoilSuctionHeadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HydraulicConductivity() As Single
            Get
                Try 
                    Return CType(Me(Me.tableGreenAmptParameter.HydraulicConductivityColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'GreenAmptParameter' 테이블의 'HydraulicConductivity' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableGreenAmptParameter.HydraulicConductivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGridValueNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.GridValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGridValueNull()
            Me(Me.tableGreenAmptParameter.GridValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSERSoilNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.USERSoilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSERSoilNull()
            Me(Me.tableGreenAmptParameter.USERSoilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMCodeNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.GRMCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMCodeNull()
            Me(Me.tableGreenAmptParameter.GRMCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMTextureENull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.GRMTextureEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMTextureENull()
            Me(Me.tableGreenAmptParameter.GRMTextureEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMTextureKNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.GRMTextureKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMTextureKNull()
            Me(Me.tableGreenAmptParameter.GRMTextureKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPorosityNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.PorosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPorosityNull()
            Me(Me.tableGreenAmptParameter.PorosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEffectivePorosityNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.EffectivePorosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEffectivePorosityNull()
            Me(Me.tableGreenAmptParameter.EffectivePorosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWFSoilSuctionHeadNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.WFSoilSuctionHeadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWFSoilSuctionHeadNull()
            Me(Me.tableGreenAmptParameter.WFSoilSuctionHeadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHydraulicConductivityNull() As Boolean
            Return Me.IsNull(Me.tableGreenAmptParameter.HydraulicConductivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHydraulicConductivityNull()
            Me(Me.tableGreenAmptParameter.HydraulicConductivityColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SoilDepthRow
        Inherits Global.System.Data.DataRow
        
        Private tableSoilDepth As SoilDepthDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSoilDepth = CType(Me.Table,SoilDepthDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GridValue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSoilDepth.GridValueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SoilDepth' 테이블의 'GridValue' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoilDepth.GridValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UserDepthClass() As String
            Get
                If Me.IsUserDepthClassNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSoilDepth.UserDepthClassColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSoilDepth.UserDepthClassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoilDepth.GRMCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SoilDepth' 테이블의 'GRMCode' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoilDepth.GRMCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilDepthClassE() As String
            Get
                If Me.IsSoilDepthClassENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSoilDepth.SoilDepthClassEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSoilDepth.SoilDepthClassEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilDepthClassK() As String
            Get
                If Me.IsSoilDepthClassKNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSoilDepth.SoilDepthClassKColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSoilDepth.SoilDepthClassKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SoilDepth() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSoilDepth.SoilDepthColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'SoilDepth' 테이블의 'SoilDepth' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoilDepth.SoilDepthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGridValueNull() As Boolean
            Return Me.IsNull(Me.tableSoilDepth.GridValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGridValueNull()
            Me(Me.tableSoilDepth.GridValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUserDepthClassNull() As Boolean
            Return Me.IsNull(Me.tableSoilDepth.UserDepthClassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUserDepthClassNull()
            Me(Me.tableSoilDepth.UserDepthClassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMCodeNull() As Boolean
            Return Me.IsNull(Me.tableSoilDepth.GRMCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMCodeNull()
            Me(Me.tableSoilDepth.GRMCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilDepthClassENull() As Boolean
            Return Me.IsNull(Me.tableSoilDepth.SoilDepthClassEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilDepthClassENull()
            Me(Me.tableSoilDepth.SoilDepthClassEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilDepthClassKNull() As Boolean
            Return Me.IsNull(Me.tableSoilDepth.SoilDepthClassKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilDepthClassKNull()
            Me(Me.tableSoilDepth.SoilDepthClassKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSoilDepthNull() As Boolean
            Return Me.IsNull(Me.tableSoilDepth.SoilDepthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSoilDepthNull()
            Me(Me.tableSoilDepth.SoilDepthColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LandCoverRow
        Inherits Global.System.Data.DataRow
        
        Private tableLandCover As LandCoverDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLandCover = CType(Me.Table,LandCoverDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GridValue() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableLandCover.GridValueColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'LandCover' 테이블의 'GridValue' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableLandCover.GridValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UserLandCover() As String
            Get
                If Me.IsUserLandCoverNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableLandCover.UserLandCoverColumn),String)
                End If
            End Get
            Set
                Me(Me.tableLandCover.UserLandCoverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableLandCover.GRMCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'LandCover' 테이블의 'GRMCode' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableLandCover.GRMCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMLandCoverE() As String
            Get
                If Me.IsGRMLandCoverENull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableLandCover.GRMLandCoverEColumn),String)
                End If
            End Get
            Set
                Me(Me.tableLandCover.GRMLandCoverEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GRMLandCoverK() As String
            Get
                If Me.IsGRMLandCoverKNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableLandCover.GRMLandCoverKColumn),String)
                End If
            End Get
            Set
                Me(Me.tableLandCover.GRMLandCoverKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RoughnessCoefficient() As Single
            Get
                Try 
                    Return CType(Me(Me.tableLandCover.RoughnessCoefficientColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'LandCover' 테이블의 'RoughnessCoefficient' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableLandCover.RoughnessCoefficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ImperviousRatio() As Single
            Get
                Try 
                    Return CType(Me(Me.tableLandCover.ImperviousRatioColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'LandCover' 테이블의 'ImperviousRatio' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableLandCover.ImperviousRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGridValueNull() As Boolean
            Return Me.IsNull(Me.tableLandCover.GridValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGridValueNull()
            Me(Me.tableLandCover.GridValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUserLandCoverNull() As Boolean
            Return Me.IsNull(Me.tableLandCover.UserLandCoverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUserLandCoverNull()
            Me(Me.tableLandCover.UserLandCoverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMCodeNull() As Boolean
            Return Me.IsNull(Me.tableLandCover.GRMCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMCodeNull()
            Me(Me.tableLandCover.GRMCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMLandCoverENull() As Boolean
            Return Me.IsNull(Me.tableLandCover.GRMLandCoverEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMLandCoverENull()
            Me(Me.tableLandCover.GRMLandCoverEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGRMLandCoverKNull() As Boolean
            Return Me.IsNull(Me.tableLandCover.GRMLandCoverKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGRMLandCoverKNull()
            Me(Me.tableLandCover.GRMLandCoverKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRoughnessCoefficientNull() As Boolean
            Return Me.IsNull(Me.tableLandCover.RoughnessCoefficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRoughnessCoefficientNull()
            Me(Me.tableLandCover.RoughnessCoefficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsImperviousRatioNull() As Boolean
            Return Me.IsNull(Me.tableLandCover.ImperviousRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetImperviousRatioNull()
            Me(Me.tableLandCover.ImperviousRatioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FlowControlGridRow
        Inherits Global.System.Data.DataRow
        
        Private tableFlowControlGrid As FlowControlGridDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFlowControlGrid = CType(Me.Table,FlowControlGridDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CVID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.CVIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'CVID' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.CVIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ColX() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ColXColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ColX' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ColXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RowY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.RowYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'RowY' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.RowYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'Name' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ControlType() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ControlTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ControlType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ControlTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DT() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.DTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'DT' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.DTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FlowDataFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.FlowDataFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'FlowDataFile' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.FlowDataFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IniStorage() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.IniStorageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'IniStorage' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.IniStorageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxStorage() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.MaxStorageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'MaxStorage' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.MaxStorageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxStorageR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.MaxStorageRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'MaxStorageR' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.MaxStorageRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROType() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROType' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROConstQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROConstQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROConstQ' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROConstQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROConstQDuration() As String
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROConstQDurationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROConstQDuration' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROConstQDurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROSDEqA() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROSDEqAColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROSDEqA' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROSDEqAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROSDEqB() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROSDEqBColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROSDEqB' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROSDEqBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROSDEqC() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROSDEqCColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROSDEqC' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROSDEqCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROSDEqD() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROSDEqDColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROSDEqD' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROSDEqDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROSDEqE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROSDEqEColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROSDEqE' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROSDEqEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ROSDEqF() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFlowControlGrid.ROSDEqFColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'FlowControlGrid' 테이블의 'ROSDEqF' 열의 값이 DBNull입니다.", e)
                End Try
            End Get
            Set
                Me(Me.tableFlowControlGrid.ROSDEqFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCVIDNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.CVIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCVIDNull()
            Me(Me.tableFlowControlGrid.CVIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsColXNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ColXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetColXNull()
            Me(Me.tableFlowControlGrid.ColXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRowYNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.RowYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRowYNull()
            Me(Me.tableFlowControlGrid.RowYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNameNull()
            Me(Me.tableFlowControlGrid.NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsControlTypeNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ControlTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetControlTypeNull()
            Me(Me.tableFlowControlGrid.ControlTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDTNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.DTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDTNull()
            Me(Me.tableFlowControlGrid.DTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFlowDataFileNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.FlowDataFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFlowDataFileNull()
            Me(Me.tableFlowControlGrid.FlowDataFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIniStorageNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.IniStorageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIniStorageNull()
            Me(Me.tableFlowControlGrid.IniStorageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxStorageNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.MaxStorageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxStorageNull()
            Me(Me.tableFlowControlGrid.MaxStorageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxStorageRNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.MaxStorageRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxStorageRNull()
            Me(Me.tableFlowControlGrid.MaxStorageRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROTypeNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROTypeNull()
            Me(Me.tableFlowControlGrid.ROTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROConstQNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROConstQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROConstQNull()
            Me(Me.tableFlowControlGrid.ROConstQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROConstQDurationNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROConstQDurationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROConstQDurationNull()
            Me(Me.tableFlowControlGrid.ROConstQDurationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROSDEqANull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROSDEqAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROSDEqANull()
            Me(Me.tableFlowControlGrid.ROSDEqAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROSDEqBNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROSDEqBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROSDEqBNull()
            Me(Me.tableFlowControlGrid.ROSDEqBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROSDEqCNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROSDEqCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROSDEqCNull()
            Me(Me.tableFlowControlGrid.ROSDEqCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROSDEqDNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROSDEqDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROSDEqDNull()
            Me(Me.tableFlowControlGrid.ROSDEqDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROSDEqENull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROSDEqEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROSDEqENull()
            Me(Me.tableFlowControlGrid.ROSDEqEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsROSDEqFNull() As Boolean
            Return Me.IsNull(Me.tableFlowControlGrid.ROSDEqFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetROSDEqFNull()
            Me(Me.tableFlowControlGrid.ROSDEqFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ProjectSettingsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ProjectSettingsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ProjectSettingsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ProjectSettingsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SubWatershedSettingsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SubWatershedSettingsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SubWatershedSettingsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SubWatershedSettingsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class RTenvRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RTenvRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As RTenvRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As RTenvRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class WatchPointsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WatchPointsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As WatchPointsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As WatchPointsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GreenAmptParameterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GreenAmptParameterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GreenAmptParameterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GreenAmptParameterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SoilDepthRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SoilDepthRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SoilDepthRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SoilDepthRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class LandCoverRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LandCoverRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As LandCoverRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As LandCoverRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class FlowControlGridRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FlowControlGridRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As FlowControlGridRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As FlowControlGridRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
